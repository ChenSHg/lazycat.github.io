<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CSS 修改滚动条样式修改</title>
    <url>/2020/12/31/CSS%20%E4%BF%AE%E6%94%B9%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%A0%B7%E5%BC%8F%E4%BF%AE%E6%94%B9/</url>
    <content><![CDATA[<h5 id="在项目中有时候会遇到-需要修改页面的滚动条样式-加入下边样式就可以了"><a href="#在项目中有时候会遇到-需要修改页面的滚动条样式-加入下边样式就可以了" class="headerlink" title="在项目中有时候会遇到 需要修改页面的滚动条样式 加入下边样式就可以了"></a>在项目中有时候会遇到 需要修改页面的滚动条样式 加入下边样式就可以了</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">div::-webkit-scrollbar &#123;</span><br><span class="line">  &#x2F;*滚动条整体样式*&#x2F;</span><br><span class="line">  width: 2px;</span><br><span class="line">  &#x2F;*高宽分别对应横竖滚动条的尺寸*&#x2F;</span><br><span class="line">  height: 1px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">div::-webkit-scrollbar-thumb &#123;</span><br><span class="line">  &#x2F;*滚动条里面小方块*&#x2F;</span><br><span class="line">  border-radius: 2px;</span><br><span class="line">  -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);</span><br><span class="line">  background: #94ddd1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">div::-webkit-scrollbar-track &#123;</span><br><span class="line">  &#x2F;*滚动条里面轨道*&#x2F;</span><br><span class="line">  -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.0);</span><br><span class="line">  border-radius: 10px;</span><br><span class="line">  background: transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>CSS</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>JS JSON串转换</title>
    <url>/2020/12/31/JS%20JSON%E4%B8%B2%E8%BD%AC%E6%8D%A2/</url>
    <content><![CDATA[<h2 id="JS-对象转为json字符串"><a href="#JS-对象转为json字符串" class="headerlink" title="JS 对象转为json字符串"></a>JS 对象转为json字符串</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var obj&#x3D;&#123;name:&quot;小明&quot;,age:&quot;15&quot;&#125;</span><br><span class="line"></span><br><span class="line">JSON.srtingify(obj) </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;&quot;&#123;&quot;name&quot;:&quot;小明&quot;,&quot;age&quot;:&quot;15&quot;&#125;&quot; </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="JSON字符串转为-JS-对象"><a href="#JSON字符串转为-JS-对象" class="headerlink" title="JSON字符串转为 JS 对象"></a>JSON字符串转为 JS 对象</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var str&#x3D;&quot;&#123;&quot;name&quot;:&quot;小明&quot;,&quot;age&quot;:&quot;15&quot;&#125;&quot; </span><br><span class="line"></span><br><span class="line">JSON.parse(str)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; &#123;name: &quot;小明&quot;, age: &quot;15&quot;&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h5 id="或者使用jQuery"><a href="#或者使用jQuery" class="headerlink" title="或者使用jQuery"></a>或者使用jQuery</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var str&#x3D;&quot;&#123;&quot;name&quot;:&quot;小明&quot;,&quot;age&quot;:&quot;15&quot;&#125;&quot; </span><br><span class="line"></span><br><span class="line">jQuery.parseJSON(str)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; &#123;name: &quot;小明&quot;, age: &quot;15&quot;&#125;</span><br></pre></td></tr></table></figure>
<h2 id="JS数组转JSON"><a href="#JS数组转JSON" class="headerlink" title="JS数组转JSON"></a>JS数组转JSON</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var arr&#x3D;[1,2,3,&#123;a:1,b:2&#125;];</span><br><span class="line"></span><br><span class="line">JSON.stringify(arr)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;&#39;[1,2,3,&#123;&quot;a&quot;:1,&quot;b&quot;:2&#125;]&#39;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="JSON-转-JS数组"><a href="#JSON-转-JS数组" class="headerlink" title="JSON 转 JS数组"></a>JSON 转 JS数组</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var str&#x3D;&#39;[1,2,3,&#123;&quot;a&quot;:1,&quot;b&quot;:2&#125;]&#39;</span><br><span class="line"></span><br><span class="line">JSON.parse(str)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;[1,2,3,&#123;a:1,b:2&#125;]</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>vue 前端项目上传文件到AWS Amazon S3 存储桶</title>
    <url>/2021/01/04/Vue%20%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0AWS%20S3/</url>
    <content><![CDATA[<h5 id="最近公司有项目需要将原先服务器上的图片转移到AWS的S3-储存桶中-，前端的上传图片也需要重新编写，后台管理是用Vue-写的-；"><a href="#最近公司有项目需要将原先服务器上的图片转移到AWS的S3-储存桶中-，前端的上传图片也需要重新编写，后台管理是用Vue-写的-；" class="headerlink" title="最近公司有项目需要将原先服务器上的图片转移到AWS的S3 储存桶中 ，前端的上传图片也需要重新编写，后台管理是用Vue 写的 ；"></a>最近公司有项目需要将原先服务器上的图片转移到AWS的S3 储存桶中 ，前端的上传图片也需要重新编写，后台管理是用Vue 写的 ；</h5><h5 id="因此本套代码主要用在Vue中，其他前端框架可参考"><a href="#因此本套代码主要用在Vue中，其他前端框架可参考" class="headerlink" title="因此本套代码主要用在Vue中，其他前端框架可参考"></a>因此本套代码主要用在Vue中，其他前端框架可参考</h5><p>1.先在项目用引入aws-sdk</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install  aws-sdk --save</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>2.在utils文件中创建aws.js文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var AWS &#x3D; require(&#39;aws-sdk&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Set the region </span><br><span class="line">AWS.config.update(&#123;</span><br><span class="line">    region: &#39;cn-northwest-1&#39;,&#x2F;&#x2F;aws服务器所在地区编号    --  小编用的是aws宁夏服务器</span><br><span class="line">    apiVersion: &#39;2006-03-01&#39;,</span><br><span class="line">    accessKeyId: &#39;XXXXXXXX&#39;,  &#x2F;&#x2F; keyID</span><br><span class="line">    secretAccessKey: &#39;XXXXXXXXXXXXXXXX&#39;  &#x2F;&#x2F;秘钥</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F;创建 aws 服务</span><br><span class="line">var s3 &#x3D; new AWS.S3();</span><br><span class="line">export function AwsUpdate(file) &#123;</span><br><span class="line">    var uploadParams &#x3D; &#123; </span><br><span class="line">      Bucket: &#39;bsd-test&#39;,&#x2F;&#x2F;桶名称</span><br><span class="line">      Key: file.name, &#x2F;&#x2F;图片名称</span><br><span class="line">      Body: file,&#x2F;&#x2F; file</span><br><span class="line">      &quot;ACL&quot;: &quot;public-read&quot;, &#x2F;&#x2F;类型</span><br><span class="line">      &#39;Access-Control-Allow-Origin&#39;: &#39;*&#39; &#x2F;&#x2F;策应请求头</span><br><span class="line">    &#125;;</span><br><span class="line">    var imgFile &#x3D; new Promise(function(resolve) &#123;</span><br><span class="line">        &#x2F;&#x2F;做一些异步操作</span><br><span class="line">        s3.upload(uploadParams, function(err, data) &#123;</span><br><span class="line">            if (err) &#123;</span><br><span class="line">                console.log(&quot;Error&quot;, err);</span><br><span class="line">            &#125;</span><br><span class="line">            if (data) &#123;</span><br><span class="line">                resolve(data);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    return imgFile</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3.在.vue 文件中调用  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style&#x3D;&quot;width: 150px; height: 150px; border: 1px solid #ccc&quot;</span><br><span class="line">      @click&#x3D;&quot;section()&quot;</span><br><span class="line">    &gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;input</span><br><span class="line">      type&#x3D;&quot;file&quot;</span><br><span class="line">      ref&#x3D;&quot;iconFile&quot;</span><br><span class="line">      @change&#x3D;&quot;fileChange&quot;</span><br><span class="line">      name&#x3D;&quot;file&quot;</span><br><span class="line">      style&#x3D;&quot;display: none&quot;</span><br><span class="line">    &#x2F;&gt;</span><br><span class="line">    &lt;img</span><br><span class="line">      :src&#x3D;&quot;imgUrl&quot;</span><br><span class="line">      alt&#x3D;&quot;&quot;</span><br><span class="line">      srcset&#x3D;&quot;&quot;</span><br><span class="line">    &#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; AwsUpdate &#125; from &quot;@&#x2F;utils&#x2F;aws&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  created() &#123;&#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      imgUrl: &quot;&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    section() &#123;</span><br><span class="line">      &#x2F;&#x2F;通过refs属性来获取点击事件，点击div实则点击input</span><br><span class="line">      this.$refs.iconFile.click();</span><br><span class="line">    &#125;,</span><br><span class="line">    fileChange(e) &#123;</span><br><span class="line">      &#x2F;&#x2F; console.log(e.target.files[0], &quot;file change&quot;);</span><br><span class="line">      let file &#x3D; e.target.files[0];</span><br><span class="line">      &#x2F;&#x2F;通过后端获取到上传参数</span><br><span class="line">      AwsUpdate(file).then(res&#x3D;&gt;&#123;</span><br><span class="line">        console.log(res,&#39;home&#39;)&#x2F;&#x2F;后端返回的image文件数据</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>到此 就可以上传文件到AWS S3储存桶里了</p>
<h1 id="踩坑记录"><a href="#踩坑记录" class="headerlink" title="踩坑记录"></a>踩坑记录</h1><p>在写项目的时候由于 没有在AWS控制台设置CORS  导致前端一直在报跨域问题<br>因此一定要在AWS控制台做CORS配置</p>
<p><img src="https://me--images.oss-cn-chengdu.aliyuncs.com/blog/aws.jpg" alt="配置CORS位置"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line"></span><br><span class="line">&lt;CORSConfiguration xmlns&#x3D;&quot;http:&#x2F;&#x2F;s3.amazonaws.com&#x2F;&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;CORSRule&gt;</span><br><span class="line"></span><br><span class="line">    &lt;AllowedOrigin&gt;*&lt;&#x2F;AllowedOrigin&gt;</span><br><span class="line"></span><br><span class="line">    &lt;AllowedMethod&gt;PUT&lt;&#x2F;AllowedMethod&gt;</span><br><span class="line"></span><br><span class="line">    &lt;AllowedMethod&gt;POST&lt;&#x2F;AllowedMethod&gt;</span><br><span class="line"></span><br><span class="line">    &lt;AllowedMethod&gt;DELETE&lt;&#x2F;AllowedMethod&gt;</span><br><span class="line"></span><br><span class="line">    &lt;AllowedMethod&gt;GET&lt;&#x2F;AllowedMethod&gt;</span><br><span class="line"></span><br><span class="line">    &lt;AllowedMethod&gt;HEAD&lt;&#x2F;AllowedMethod&gt;</span><br><span class="line"></span><br><span class="line">    &lt;MaxAgeSeconds&gt;3000&lt;&#x2F;MaxAgeSeconds&gt;</span><br><span class="line"></span><br><span class="line">    &lt;AllowedHeader&gt;*&lt;&#x2F;AllowedHeader&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;CORSRule&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;CORSConfiguration&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><a href="https://docs.aws.amazon.com/zh_cn/sdk-for-javascript/v3/developer-guide/s3-example-photo-album-full.html" title="title属性">官方参考链接</a></p>

]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue 商城后台生成商品SKU规格列表</title>
    <url>/2021/01/08/Vue%20%E5%95%86%E5%9F%8E%E5%90%8E%E5%8F%B0%E7%94%9F%E6%88%90%E5%95%86%E5%93%81SKU%E8%A7%84%E6%A0%BC%E5%88%97%E8%A1%A8/</url>
    <content><![CDATA[<p>前两个月刚入职一家新公司，由于公司是电商性质的，需要二开商城功能，重新做SKU列表，<br>由于时间紧张采用了<a href="https://hooray.github.io/vue-sku-form/">vue-sku-form</a> 这个组件；需要的可以参考；</p>
<h6 id="最近终于有时间了-自己将SKU-撸了一遍"><a href="#最近终于有时间了-自己将SKU-撸了一遍" class="headerlink" title="最近终于有时间了 自己将SKU 撸了一遍"></a>最近终于有时间了 自己将SKU 撸了一遍</h6><h6 id="技术栈是-vue-element"><a href="#技术栈是-vue-element" class="headerlink" title="技术栈是 vue+element"></a>技术栈是 vue+element</h6><h4 id="先上预览图"><a href="#先上预览图" class="headerlink" title="先上预览图"></a>先上预览图</h4><p><img src="https://me--images.oss-cn-chengdu.aliyuncs.com/blog/sku.png" alt="SKU-预览图"></p>
<h4 id="1-先写HTML部分"><a href="#1-先写HTML部分" class="headerlink" title="1. 先写HTML部分"></a>1. 先写HTML部分</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;sku_select&quot;</span>&gt;</span><br><span class="line">    &lt;!-- 添加规格--&gt;</span><br><span class="line">    &lt;el-row&gt;</span><br><span class="line">        &lt;el-col :span=<span class="string">&#x27;2&#x27;</span>&gt;添加规格:&lt;/el-col&gt;</span><br><span class="line">        &lt;el-col :span=<span class="string">&#x27;8&#x27;</span>&gt;</span><br><span class="line">            &lt;el-input v-model=<span class="string">&#x27;Specs&#x27;</span> placeholder=<span class="string">&quot;请输入内容&quot;</span> size=<span class="string">&#x27;small&#x27;</span> @keyup.enter.native=<span class="string">&#x27;addSpecs&#x27;</span>&gt;</span><br><span class="line">                &lt;el-button slot=<span class="string">&quot;append&quot;</span> @click=<span class="string">&#x27;addSpecs&#x27;</span>&gt;添加规格&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-input&gt;</span><br><span class="line">        &lt;/el-col&gt;</span><br><span class="line">    &lt;/el-row&gt;</span><br><span class="line">    &lt;!-- 添加参数--&gt;</span><br><span class="line">    &lt;el-row class=<span class="string">&quot;specs_box&quot;</span>&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;specs_item&quot;</span> v-for=<span class="string">&#x27;(item,i) of SpecsList&#x27;</span> :key=<span class="string">&#x27;i&#x27;</span>&gt;</span><br><span class="line">            &lt;div class=<span class="string">&quot;specs_titt&quot;</span>&gt;&#123;&#123;item.key&#125;&#125;&lt;/div&gt;</span><br><span class="line">            &lt;div class=<span class="string">&quot;specs_key&quot;</span>&gt;</span><br><span class="line">                &lt;el-checkbox-group v-model=<span class="string">&quot;item.checkedAttr&quot;</span> @change=<span class="string">&#x27;checkboxChange(item)&#x27;</span>&gt;</span><br><span class="line">                    &lt;el-checkbox v-for=<span class="string">&quot;(value,j) in item.value&quot;</span> :label=<span class="string">&quot;value&quot;</span> :key=<span class="string">&quot;j&quot;</span>&gt;&#123;&#123;value&#125;&#125;&lt;/el-checkbox&gt;</span><br><span class="line">                &lt;/el-checkbox-group&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=<span class="string">&quot;specs_add&quot;</span>&gt;</span><br><span class="line">                &lt;el-input placeholder=<span class="string">&quot;请输入内容&quot;</span> v-model=<span class="string">&#x27;attribute&#x27;</span> size=<span class="string">&#x27;small&#x27;</span> @keyup.enter.native=<span class="string">&#x27;addAttribute(item,i)&#x27;</span>&gt;</span><br><span class="line">                    &lt;el-button slot=<span class="string">&quot;append&quot;</span> @click=<span class="string">&#x27;addAttribute(item,i)&#x27;</span>&gt;添加参数&lt;/el-button&gt;</span><br><span class="line">                &lt;/el-input&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/el-row&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;!-- SKU 表格--&gt;</span><br><span class="line">&lt;div class=<span class="string">&quot;table_box&quot;</span>&gt;</span><br><span class="line">    &lt;el-table ref=<span class="string">&#x27;SkuData&#x27;</span> :data=<span class="string">&quot;SkuData&quot;</span> style=<span class="string">&quot;width: 100%&quot;</span> border&gt;</span><br><span class="line">        &lt;!-- &lt;el-table-column align=<span class="string">&quot;center&quot;</span> v-for=<span class="string">&quot;(item, i) of checkedAttr&quot;</span> :key=<span class="string">&quot;i&quot;</span>&gt;</span><br><span class="line">            &lt;template slot=<span class="string">&quot;header&quot;</span> slot-scope=<span class="string">&quot;scope&quot;</span>&gt;</span><br><span class="line">                &#123;&#123;item.key&#125;&#125;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;template slot-scope=<span class="string">&quot;scope&quot;</span>&gt;</span><br><span class="line">                &#123;&#123; scope.row.price &#125;&#125;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">        &lt;/el-table-column&gt; --&gt;</span><br><span class="line">        &lt;template v-for=<span class="string">&quot;(item, index) in checkedAttr&quot;</span>&gt;</span><br><span class="line">            &lt;el-table-column</span><br><span class="line">                :label=<span class="string">&quot;item.key&quot;</span></span><br><span class="line">                :key=<span class="string">&quot;index&quot;</span></span><br><span class="line">                align=<span class="string">&#x27;center&#x27;</span>&gt;</span><br><span class="line">                &lt;template slot-scope=<span class="string">&quot;scope&quot;</span>&gt;</span><br><span class="line">                    &#123;&#123; scope.row[item.key]&#125;&#125;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">        &lt;el-table-column label=<span class="string">&quot;价格&quot;</span> align=<span class="string">&#x27;center&#x27;</span>&gt;</span><br><span class="line">            &lt;template slot-scope=<span class="string">&#x27;scope&#x27;</span>&gt;</span><br><span class="line">                &lt;el-input v-model=<span class="string">&#x27;scope.row.price&#x27;</span>&gt;&lt;/el-input&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">        &lt;el-table-column label=<span class="string">&quot;库存&quot;</span> align=<span class="string">&#x27;center&#x27;</span>&gt;</span><br><span class="line">            &lt;template slot-scope=<span class="string">&#x27;scope&#x27;</span>&gt;</span><br><span class="line">                &lt;el-input v-model=<span class="string">&#x27;scope.row.stock&#x27;</span>&gt;&lt;/el-input&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;!-- SKU 数据--&gt;</span><br><span class="line">  &lt;div&gt;&#123;&#123;table&#125;&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h4 id="2-CSS-样式"><a href="#2-CSS-样式" class="headerlink" title="2. CSS 样式"></a>2. CSS 样式</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.sku_select &#123;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.specs_box &#123;</span><br><span class="line">    margin: 10px 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.specs_item &#123;</span><br><span class="line">    width: 300px;</span><br><span class="line">    height: auto;</span><br><span class="line">    border-radius: 5px;</span><br><span class="line">    border: 1px solid <span class="comment">#DCDFE6;</span></span><br><span class="line">    overflow: hidden;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    margin: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.specs_titt &#123;</span><br><span class="line">    height: 40px;</span><br><span class="line">    line-height: 40px;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">    padding: 0 10px;</span><br><span class="line">    border-bottom: 1px solid <span class="comment">#DCDFE6;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.specs_key &#123;</span><br><span class="line">    padding: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.specs_add &#123;</span><br><span class="line">    padding: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="3-JS-部分"><a href="#3-JS-部分" class="headerlink" title="3. JS 部分"></a>3. JS 部分</h4><h6 id="data详情"><a href="#data详情" class="headerlink" title="data详情"></a>data详情</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">data</span></span>() &#123;</span><br><span class="line">       <span class="built_in">return</span> &#123;</span><br><span class="line">           SkuData: [], //skudata</span><br><span class="line">           Specs: <span class="string">&quot;&quot;</span>, //添加的规格值</span><br><span class="line">           attribute: <span class="string">&quot;&quot;</span>, //添加的参数值</span><br><span class="line">           checkedAttr: [], //勾选详情</span><br><span class="line">           SpecsList: [</span><br><span class="line">               &#123; key: <span class="string">&#x27;颜色&#x27;</span>, value: [<span class="string">&quot;黑&quot;</span>, <span class="string">&quot;白&quot;</span>], checkedAttr: [] &#125;,</span><br><span class="line">               &#123; key: <span class="string">&#x27;尺寸&#x27;</span>, value: [<span class="string">&quot;14寸&quot;</span>, <span class="string">&quot;15寸&quot;</span>], checkedAttr: [] &#125;,</span><br><span class="line">               &#123; key: <span class="string">&#x27;储存盘&#x27;</span>, value: [<span class="string">&quot;固态&quot;</span>, <span class="string">&quot;机械&quot;</span>], checkedAttr: [] &#125;,</span><br><span class="line">           ], //规格详情</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;,</span><br></pre></td></tr></table></figure>
<h6 id="添加规格"><a href="#添加规格" class="headerlink" title="添加规格"></a>添加规格</h6><p>首先判断输入值是否为空，为空则让其抛出，如果值存在，再判断规格列表是否存在规格做规格名称重复验证；</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">addSpecs</span></span>() &#123;</span><br><span class="line">    var that = this;</span><br><span class="line">    var val = that.Specs;</span><br><span class="line">    var list = that.SpecsList;</span><br><span class="line">    <span class="keyword">if</span> (val) &#123; //判断输入值是否为空</span><br><span class="line">        <span class="keyword">if</span> (list.length &gt; 0) &#123; // 判断是否存在规格</span><br><span class="line">            <span class="keyword">for</span> (var i = 0; i &lt; list.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (list[i].key == val) &#123;</span><br><span class="line">                    alert(<span class="string">&#x27;名称重复&#x27;</span>) // 验证规格名称是否重复</span><br><span class="line">                    that.Specs = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                    <span class="built_in">return</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            list.push(&#123; //没有重复 则push到数组中</span><br><span class="line">                <span class="string">&quot;key&quot;</span>: val,</span><br><span class="line">                <span class="string">&quot;value&quot;</span>: [],</span><br><span class="line">                <span class="string">&quot;checkedAttr&quot;</span>: []</span><br><span class="line">            &#125;)</span><br><span class="line">            that.Specs = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; // 如果不存在 则push到数组里</span><br><span class="line">            list.push(&#123;</span><br><span class="line">                <span class="string">&quot;key&quot;</span>: val,</span><br><span class="line">                <span class="string">&quot;value&quot;</span>: [],</span><br><span class="line">                <span class="string">&quot;checkedAttr&quot;</span>: []</span><br><span class="line">            &#125;)</span><br><span class="line">            that.Specs = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(<span class="string">&#x27;不能为空&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<h6 id="添加参数"><a href="#添加参数" class="headerlink" title="添加参数"></a>添加参数</h6><p>首先判断输入值是否为空，为空则让其抛出，如果值存在，再判断参数列表是否存在参数做参数名称重复验证；</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">addAttribute(value, i) &#123;</span><br><span class="line">      console.log(this.attribute)</span><br><span class="line">      var list = this.SpecsList[i].value;</span><br><span class="line">      <span class="keyword">if</span> (this.attribute) &#123; //参数是否为空</span><br><span class="line">          <span class="keyword">if</span> (list.indexOf(this.attribute) != -1) &#123; //查找参数是否存在</span><br><span class="line">              <span class="built_in">return</span> alert(<span class="string">&quot;已存在&quot;</span>)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              this.SpecsList[i].value.push(this.attribute);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          alert(<span class="string">&quot;不能为空&quot;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      console.log(this.SpecsList)</span><br><span class="line">      this.attribute = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h6 id="勾选参数"><a href="#勾选参数" class="headerlink" title="勾选参数"></a>勾选参数</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">setTableData(attrArr) &#123;</span><br><span class="line">    var that = this;</span><br><span class="line">    <span class="built_in">let</span> list = attrArr;</span><br><span class="line">    const reducer = (accumulator, currentValue) =&gt; &#123;</span><br><span class="line">        var data = [];</span><br><span class="line">        console.log(accumulator, currentValue, <span class="string">&#x27;//////&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> (accumulator.length) &#123; //判断accumulator是否为第一次传入</span><br><span class="line">            accumulator.forEach(element =&gt; &#123;</span><br><span class="line">                currentValue.value.forEach(value =&gt; &#123;</span><br><span class="line">                    <span class="built_in">let</span> obj = &#123;&#125;;</span><br><span class="line">                    <span class="keyword">for</span> (var el <span class="keyword">in</span> element) &#123;</span><br><span class="line">                        // console.log(el + <span class="string">&quot;....&quot;</span> + element[el]);</span><br><span class="line">                        <span class="built_in">let</span> key = currentValue.key;</span><br><span class="line">                        obj[key] = value;</span><br><span class="line">                        obj[el] = element[el];</span><br><span class="line">                        obj[<span class="string">&#x27;price&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                        obj[<span class="string">&#x27;stock&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    data.push(obj)</span><br><span class="line"></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            accumulator.value.forEach(el =&gt; &#123;</span><br><span class="line">                currentValue.value.forEach(value =&gt; &#123;</span><br><span class="line">                    <span class="built_in">let</span> obj = &#123;&#125;;</span><br><span class="line">                    <span class="built_in">let</span> key = accumulator.key;</span><br><span class="line">                    obj[key] = el;</span><br><span class="line">                    <span class="built_in">let</span> key1 = currentValue.key;</span><br><span class="line">                    obj[key1] = value;</span><br><span class="line">                    obj[<span class="string">&#x27;price&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                    obj[<span class="string">&#x27;stock&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                    data.push(obj)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> that.SkuData = data</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span> (list.length == 1) &#123; //判断是否选择了一个规格</span><br><span class="line">        console.log(list); </span><br><span class="line">        var data = [];</span><br><span class="line">        <span class="keyword">for</span> (var i = 0; i &lt; list[0].value.length; i++) &#123;</span><br><span class="line">            var obj = &#123;&#125;;</span><br><span class="line">            var key = list[0].key;</span><br><span class="line">            obj[key] = list[0].value[i];</span><br><span class="line">            obj[<span class="string">&#x27;price&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            obj[<span class="string">&#x27;stock&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            data.push(obj)</span><br><span class="line">        &#125;</span><br><span class="line">        that.SkuData = data</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        that.SkuData = list.reduce(reducer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<h6 id="在computed中监听SKUData"><a href="#在computed中监听SKUData" class="headerlink" title="在computed中监听SKUData"></a>在computed中监听SKUData</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">    <span class="function"><span class="title">table</span></span>() &#123;</span><br><span class="line">        var data = this.SkuData;</span><br><span class="line">        <span class="built_in">return</span> data</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>到此 简单的Sku 商品规格组合就算是完成了 ； </p>
<h6 id="后续会更新其他功能"><a href="#后续会更新其他功能" class="headerlink" title="后续会更新其他功能"></a>后续会更新其他功能</h6>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>JavaScript</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 常用命令</title>
    <url>/2021/01/17/hexo%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h3 id="hexo的一些常用命令，包括创建文本，清除缓存，本地预览，打包处理，推送至服务器；"><a href="#hexo的一些常用命令，包括创建文本，清除缓存，本地预览，打包处理，推送至服务器；" class="headerlink" title="hexo的一些常用命令，包括创建文本，清除缓存，本地预览，打包处理，推送至服务器；"></a>hexo的一些常用命令，包括创建文本，清除缓存，本地预览，打包处理，推送至服务器；</h3><h3 id="创建一篇新文章"><a href="#创建一篇新文章" class="headerlink" title="创建一篇新文章"></a>创建一篇新文章</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new  XXX</span><br><span class="line">或</span><br><span class="line">hexo n XXX</span><br></pre></td></tr></table></figure>
<h3 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>

<h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server</span><br><span class="line">或</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<h3 id="打包处理"><a href="#打包处理" class="headerlink" title="打包处理"></a>打包处理</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">或</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<h3 id="推送至服务器-git"><a href="#推送至服务器-git" class="headerlink" title="推送至服务器/git"></a>推送至服务器/git</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br><span class="line">或</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序实现下拉刷新</title>
    <url>/2021/01/15/wxtest/</url>
    <content><![CDATA[<p>在写列表页面的时候，会有下拉刷新页面的需求，微信小程序本身也提供了这类的API供前端开发者们使用；本文做一个简单的下来刷新处理；</p>
<blockquote>
<p>在本文中 将要使用的微信API </p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/显示导航栏loading加载</span><br><span class="line">    ·wx.showNavigationBarLoading(Object object) </span><br><span class="line">//显示页面加载提示</span><br><span class="line">    ·wx.showLoading(Object object)</span><br><span class="line">//隐藏页面加载提示</span><br><span class="line">    ·wx.hideLoading(Object object)</span><br><span class="line">//隐藏导航栏加载提示</span><br><span class="line">    ·wx.hideNavigationBarLoading(Object object)</span><br><span class="line">//停止下拉刷新</span><br><span class="line">    ·wx.stopPullDownRefresh(Object object)</span><br></pre></td></tr></table></figure>
<h6 id="首先在json文件中引入"><a href="#首先在json文件中引入" class="headerlink" title="首先在json文件中引入"></a>首先在json文件中引入</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">     <span class="string">&quot;enablePullDownRefresh&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h6 id="然后在js-文件中"><a href="#然后在js-文件中" class="headerlink" title="然后在js 文件中"></a>然后在js 文件中</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">     /**</span><br><span class="line">     * 页面相关事件处理函数--监听用户下拉动作</span><br><span class="line">     */</span><br><span class="line">    onPullDownRefresh: <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        //调用刷新时将执行的方法</span><br><span class="line">    	this.onRefresh();</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">onRefresh</span></span>()&#123;</span><br><span class="line">        //在当前页面显示导航条加载动画</span><br><span class="line">        wx.showNavigationBarLoading(); </span><br><span class="line">        //显示 loading 提示框。需主动调用 wx.hideLoading 才能关闭提示框</span><br><span class="line">        wx.showLoading(&#123;</span><br><span class="line">          title: <span class="string">&#x27;刷新中...&#x27;</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">        setTimeout(()=&gt;&#123;</span><br><span class="line">            //隐藏loading 提示框</span><br><span class="line">                wx.hideLoading();</span><br><span class="line">                //隐藏导航条加载动画</span><br><span class="line">                wx.hideNavigationBarLoading();</span><br><span class="line">                //停止下拉刷新</span><br><span class="line">                wx.stopPullDownRefresh();</span><br><span class="line">        &#125;,3000)</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>此外，除了下拉刷新，有时候可能是在某个事件进行时触发刷新动作，此时可以调用 wx.startPullDownRefresh(Object object) 此api的作用是：“ 开始下拉刷新。调用后触发下拉刷新动画，效果与用户手动下拉刷新一致。”</p>
</blockquote>
<h6 id="不要忘了在需要刷新结束时调用wx-stopPullDownRefresh-，否则，页面将会保持下拉状态、不会回弹。"><a href="#不要忘了在需要刷新结束时调用wx-stopPullDownRefresh-，否则，页面将会保持下拉状态、不会回弹。" class="headerlink" title="不要忘了在需要刷新结束时调用wx.stopPullDownRefresh()，否则，页面将会保持下拉状态、不会回弹。"></a><font color='#00f'>不要忘了在需要刷新结束时调用wx.stopPullDownRefresh()，否则，页面将会保持下拉状态、不会回弹。</font></h6>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>电脑常用操作命令符</title>
    <url>/2020/12/30/%E7%94%B5%E8%84%91%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%E7%AC%A6/</url>
    <content><![CDATA[<h4 id="本文简单记录一些电脑常用的操作命令"><a href="#本文简单记录一些电脑常用的操作命令" class="headerlink" title="本文简单记录一些电脑常用的操作命令"></a>本文简单记录一些电脑常用的操作命令</h4><h5 id="该命令行都是基于windows-R-输入cmd-出现的命令框"><a href="#该命令行都是基于windows-R-输入cmd-出现的命令框" class="headerlink" title="该命令行都是基于windows+R 输入cmd 出现的命令框"></a>该命令行都是基于windows+R 输入cmd 出现的命令框</h5> <a id="more"></a>

<h5 id="查询电脑本机IP地址"><a href="#查询电脑本机IP地址" class="headerlink" title="查询电脑本机IP地址"></a>查询电脑本机IP地址</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ipconfig/all</span><br></pre></td></tr></table></figure>
<h5 id="查询所有端口号"><a href="#查询所有端口号" class="headerlink" title="查询所有端口号"></a>查询所有端口号</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -ano</span><br></pre></td></tr></table></figure>
<h5 id="查询某个端口号"><a href="#查询某个端口号" class="headerlink" title="查询某个端口号"></a>查询某个端口号</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -ano | findstr 8080</span><br></pre></td></tr></table></figure>
<h5 id="停止某个端口号"><a href="#停止某个端口号" class="headerlink" title="停止某个端口号"></a>停止某个端口号</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">taskkill/pid 9332</span><br></pre></td></tr></table></figure>
<h5 id="强制停止端口号"><a href="#强制停止端口号" class="headerlink" title="强制停止端口号"></a>强制停止端口号</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">taskkill/pid 9332 /F</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序直播功能</title>
    <url>/2021/01/05/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9B%B4%E6%92%AD%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<blockquote>
<p>近期公司要在微信小程序中增加直播功能,由于工期比较紧张，所以使用微信小程序自带的直播功能；</p>
</blockquote>
<p>  <img src="https://me--images.oss-cn-chengdu.aliyuncs.com/blog/zhibo.png" alt="小程序直播功能"></p>
<h6 id="查看官方文档"><a href="#查看官方文档" class="headerlink" title="查看官方文档"></a><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/liveplayer/live-player-plugin.html">查看官方文档</a></h6>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>移动端自适应 px转rem 实现响应式屏幕</title>
    <url>/2020/12/30/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%87%AA%E9%80%82%E5%BA%94%20px%E8%BD%ACrem%20%E5%AE%9E%E7%8E%B0%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B1%8F%E5%B9%95/</url>
    <content><![CDATA[<h6 id="在做移动端开发，h5开发时，会需求屏幕的自适应；因此就需要用到rem、em、vw、或者-；"><a href="#在做移动端开发，h5开发时，会需求屏幕的自适应；因此就需要用到rem、em、vw、或者-；" class="headerlink" title="在做移动端开发，h5开发时，会需求屏幕的自适应；因此就需要用到rem、em、vw、或者%；"></a>在做移动端开发，h5开发时，会需求屏幕的自适应；因此就需要用到rem、em、vw、或者%；</h6><h6 id="本文简述一下html文本中rem的使用方法"><a href="#本文简述一下html文本中rem的使用方法" class="headerlink" title="本文简述一下html文本中rem的使用方法"></a>本文简述一下html文本中rem的使用方法</h6><h6 id=""><a href="#" class="headerlink" title=""></a></h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    !<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">         var pageWid = 750; </span><br><span class="line">         <span class="keyword">function</span> <span class="function"><span class="title">a</span></span>() &#123; </span><br><span class="line">              document.documentElement.style.fontSize = document.documentElement.clientWidth / pageWid * 10 / 16 * 1000 + <span class="string">&quot;%&quot;</span></span><br><span class="line">             &#125;</span><br><span class="line">             var b = null; </span><br><span class="line">             window.addEventListener(<span class="string">&quot;resize&quot;</span>, <span class="function"><span class="title">function</span></span> () &#123; </span><br><span class="line">              clearTimeout(b);</span><br><span class="line">              b = setTimeout(a, 100) </span><br><span class="line">             &#125;, !1);</span><br><span class="line">         a() </span><br><span class="line">    &#125;(window);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序设定富文本图片宽度</title>
    <url>/2021/01/22/wxtest1/</url>
    <content><![CDATA[<p>在微信小程序中有时候需要用到微信自带的富文本组件 rich-text  如果富文本中有图片的存在，在小程序中展示图片会超出页面的宽度，这时候就需要在小程序中处理图片的宽度了</p>
<h6 id="给富文本中的图片添加一个class样式"><a href="#给富文本中的图片添加一个class样式" class="headerlink" title="给富文本中的图片添加一个class样式"></a>给富文本中的图片添加一个class样式</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">var _str = data.data.replace(/&lt;img /g, <span class="string">&#x27;&lt;img class=&quot;rich_img&quot; &#x27;</span>);</span><br><span class="line">     console.log(_str)</span><br><span class="line">   that.setData(&#123;</span><br><span class="line">       msg: _str</span><br><span class="line">     &#125;)</span><br></pre></td></tr></table></figure>
<h6 id="设置class-样式详情"><a href="#设置class-样式详情" class="headerlink" title="设置class 样式详情"></a>设置class 样式详情</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.rich_img&#123;</span><br><span class="line">  max-width:100% !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
</search>
