<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CSS 修改滚动条样式修改</title>
    <url>/CSS%20%E4%BF%AE%E6%94%B9%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%A0%B7%E5%BC%8F%E4%BF%AE%E6%94%B9/</url>
    <content><![CDATA[<h5 id="在项目中有时候会遇到-需要修改页面的滚动条样式-加入下边样式就可以了"><a href="#在项目中有时候会遇到-需要修改页面的滚动条样式-加入下边样式就可以了" class="headerlink" title="在项目中有时候会遇到 需要修改页面的滚动条样式 加入下边样式就可以了"></a>在项目中有时候会遇到 需要修改页面的滚动条样式 加入下边样式就可以了</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">div::-webkit-scrollbar &#123;</span><br><span class="line">  &#x2F;*滚动条整体样式*&#x2F;</span><br><span class="line">  width: 2px;</span><br><span class="line">  &#x2F;*高宽分别对应横竖滚动条的尺寸*&#x2F;</span><br><span class="line">  height: 1px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">div::-webkit-scrollbar-thumb &#123;</span><br><span class="line">  &#x2F;*滚动条里面小方块*&#x2F;</span><br><span class="line">  border-radius: 2px;</span><br><span class="line">  -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);</span><br><span class="line">  background: #94ddd1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">div::-webkit-scrollbar-track &#123;</span><br><span class="line">  &#x2F;*滚动条里面轨道*&#x2F;</span><br><span class="line">  -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.0);</span><br><span class="line">  border-radius: 10px;</span><br><span class="line">  background: transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>CSS</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>JS JSON串转换</title>
    <url>/JS%20JSON%E4%B8%B2%E8%BD%AC%E6%8D%A2/</url>
    <content><![CDATA[<h2 id="JS-对象转为json字符串"><a href="#JS-对象转为json字符串" class="headerlink" title="JS 对象转为json字符串"></a>JS 对象转为json字符串</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var obj&#x3D;&#123;name:&quot;小明&quot;,age:&quot;15&quot;&#125;</span><br><span class="line"></span><br><span class="line">JSON.srtingify(obj) </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;&quot;&#123;&quot;name&quot;:&quot;小明&quot;,&quot;age&quot;:&quot;15&quot;&#125;&quot; </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="JSON字符串转为-JS-对象"><a href="#JSON字符串转为-JS-对象" class="headerlink" title="JSON字符串转为 JS 对象"></a>JSON字符串转为 JS 对象</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var str&#x3D;&quot;&#123;&quot;name&quot;:&quot;小明&quot;,&quot;age&quot;:&quot;15&quot;&#125;&quot; </span><br><span class="line"></span><br><span class="line">JSON.parse(str)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; &#123;name: &quot;小明&quot;, age: &quot;15&quot;&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h5 id="或者使用jQuery"><a href="#或者使用jQuery" class="headerlink" title="或者使用jQuery"></a>或者使用jQuery</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var str&#x3D;&quot;&#123;&quot;name&quot;:&quot;小明&quot;,&quot;age&quot;:&quot;15&quot;&#125;&quot; </span><br><span class="line"></span><br><span class="line">jQuery.parseJSON(str)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; &#123;name: &quot;小明&quot;, age: &quot;15&quot;&#125;</span><br></pre></td></tr></table></figure>
<h2 id="JS数组转JSON"><a href="#JS数组转JSON" class="headerlink" title="JS数组转JSON"></a>JS数组转JSON</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var arr&#x3D;[1,2,3,&#123;a:1,b:2&#125;];</span><br><span class="line"></span><br><span class="line">JSON.stringify(arr)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;&#39;[1,2,3,&#123;&quot;a&quot;:1,&quot;b&quot;:2&#125;]&#39;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="JSON-转-JS数组"><a href="#JSON-转-JS数组" class="headerlink" title="JSON 转 JS数组"></a>JSON 转 JS数组</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var str&#x3D;&#39;[1,2,3,&#123;&quot;a&quot;:1,&quot;b&quot;:2&#125;]&#39;</span><br><span class="line"></span><br><span class="line">JSON.parse(str)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;[1,2,3,&#123;a:1,b:2&#125;]</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>vue 前端项目上传文件到AWS Amazon S3 存储桶</title>
    <url>/Vue%20%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0AWS%20S3/</url>
    <content><![CDATA[<h5 id="最近公司有项目需要将原先服务器上的图片转移到AWS的S3-储存桶中-，前端的上传图片也需要重新编写，后台管理是用Vue-写的-；"><a href="#最近公司有项目需要将原先服务器上的图片转移到AWS的S3-储存桶中-，前端的上传图片也需要重新编写，后台管理是用Vue-写的-；" class="headerlink" title="最近公司有项目需要将原先服务器上的图片转移到AWS的S3 储存桶中 ，前端的上传图片也需要重新编写，后台管理是用Vue 写的 ；"></a>最近公司有项目需要将原先服务器上的图片转移到AWS的S3 储存桶中 ，前端的上传图片也需要重新编写，后台管理是用Vue 写的 ；</h5><h5 id="因此本套代码主要用在Vue中，其他前端框架可参考"><a href="#因此本套代码主要用在Vue中，其他前端框架可参考" class="headerlink" title="因此本套代码主要用在Vue中，其他前端框架可参考"></a>因此本套代码主要用在Vue中，其他前端框架可参考</h5><p>1.先在项目用引入aws-sdk</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install  aws-sdk --save</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>2.在utils文件中创建aws.js文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var AWS &#x3D; require(&#39;aws-sdk&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Set the region </span><br><span class="line">AWS.config.update(&#123;</span><br><span class="line">    region: &#39;cn-northwest-1&#39;,&#x2F;&#x2F;aws服务器所在地区编号    --  小编用的是aws宁夏服务器</span><br><span class="line">    apiVersion: &#39;2006-03-01&#39;,</span><br><span class="line">    accessKeyId: &#39;XXXXXXXX&#39;,  &#x2F;&#x2F; keyID</span><br><span class="line">    secretAccessKey: &#39;XXXXXXXXXXXXXXXX&#39;  &#x2F;&#x2F;秘钥</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F;创建 aws 服务</span><br><span class="line">var s3 &#x3D; new AWS.S3();</span><br><span class="line">export function AwsUpdate(file) &#123;</span><br><span class="line">    var uploadParams &#x3D; &#123; </span><br><span class="line">      Bucket: &#39;bsd-test&#39;,&#x2F;&#x2F;桶名称</span><br><span class="line">      Key: file.name, &#x2F;&#x2F;图片名称</span><br><span class="line">      Body: file,&#x2F;&#x2F; file</span><br><span class="line">      &quot;ACL&quot;: &quot;public-read&quot;, &#x2F;&#x2F;类型</span><br><span class="line">      &#39;Access-Control-Allow-Origin&#39;: &#39;*&#39; &#x2F;&#x2F;策应请求头</span><br><span class="line">    &#125;;</span><br><span class="line">    var imgFile &#x3D; new Promise(function(resolve) &#123;</span><br><span class="line">        &#x2F;&#x2F;做一些异步操作</span><br><span class="line">        s3.upload(uploadParams, function(err, data) &#123;</span><br><span class="line">            if (err) &#123;</span><br><span class="line">                console.log(&quot;Error&quot;, err);</span><br><span class="line">            &#125;</span><br><span class="line">            if (data) &#123;</span><br><span class="line">                resolve(data);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    return imgFile</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3.在.vue 文件中调用  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      style&#x3D;&quot;width: 150px; height: 150px; border: 1px solid #ccc&quot;</span><br><span class="line">      @click&#x3D;&quot;section()&quot;</span><br><span class="line">    &gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;input</span><br><span class="line">      type&#x3D;&quot;file&quot;</span><br><span class="line">      ref&#x3D;&quot;iconFile&quot;</span><br><span class="line">      @change&#x3D;&quot;fileChange&quot;</span><br><span class="line">      name&#x3D;&quot;file&quot;</span><br><span class="line">      style&#x3D;&quot;display: none&quot;</span><br><span class="line">    &#x2F;&gt;</span><br><span class="line">    &lt;img</span><br><span class="line">      :src&#x3D;&quot;imgUrl&quot;</span><br><span class="line">      alt&#x3D;&quot;&quot;</span><br><span class="line">      srcset&#x3D;&quot;&quot;</span><br><span class="line">    &#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; AwsUpdate &#125; from &quot;@&#x2F;utils&#x2F;aws&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  created() &#123;&#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      imgUrl: &quot;&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    section() &#123;</span><br><span class="line">      &#x2F;&#x2F;通过refs属性来获取点击事件，点击div实则点击input</span><br><span class="line">      this.$refs.iconFile.click();</span><br><span class="line">    &#125;,</span><br><span class="line">    fileChange(e) &#123;</span><br><span class="line">      &#x2F;&#x2F; console.log(e.target.files[0], &quot;file change&quot;);</span><br><span class="line">      let file &#x3D; e.target.files[0];</span><br><span class="line">      &#x2F;&#x2F;通过后端获取到上传参数</span><br><span class="line">      AwsUpdate(file).then(res&#x3D;&gt;&#123;</span><br><span class="line">        console.log(res,&#39;home&#39;)&#x2F;&#x2F;后端返回的image文件数据</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>到此 就可以上传文件到AWS S3储存桶里了</p>
<h1 id="踩坑记录"><a href="#踩坑记录" class="headerlink" title="踩坑记录"></a>踩坑记录</h1><p>在写项目的时候由于 没有在AWS控制台设置CORS  导致前端一直在报跨域问题<br>因此一定要在AWS控制台做CORS配置</p>
<p><img src="https://me--images.oss-cn-chengdu.aliyuncs.com/blog/aws.jpg" alt="配置CORS位置"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line"></span><br><span class="line">&lt;CORSConfiguration xmlns&#x3D;&quot;http:&#x2F;&#x2F;s3.amazonaws.com&#x2F;&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;CORSRule&gt;</span><br><span class="line"></span><br><span class="line">    &lt;AllowedOrigin&gt;*&lt;&#x2F;AllowedOrigin&gt;</span><br><span class="line"></span><br><span class="line">    &lt;AllowedMethod&gt;PUT&lt;&#x2F;AllowedMethod&gt;</span><br><span class="line"></span><br><span class="line">    &lt;AllowedMethod&gt;POST&lt;&#x2F;AllowedMethod&gt;</span><br><span class="line"></span><br><span class="line">    &lt;AllowedMethod&gt;DELETE&lt;&#x2F;AllowedMethod&gt;</span><br><span class="line"></span><br><span class="line">    &lt;AllowedMethod&gt;GET&lt;&#x2F;AllowedMethod&gt;</span><br><span class="line"></span><br><span class="line">    &lt;AllowedMethod&gt;HEAD&lt;&#x2F;AllowedMethod&gt;</span><br><span class="line"></span><br><span class="line">    &lt;MaxAgeSeconds&gt;3000&lt;&#x2F;MaxAgeSeconds&gt;</span><br><span class="line"></span><br><span class="line">    &lt;AllowedHeader&gt;*&lt;&#x2F;AllowedHeader&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;CORSRule&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;CORSConfiguration&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><a href="https://docs.aws.amazon.com/zh_cn/sdk-for-javascript/v3/developer-guide/s3-example-photo-album-full.html" title="title属性">官方参考链接</a></p>

]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue 商城后台生成商品SKU规格列表</title>
    <url>/Vue%20%E5%95%86%E5%9F%8E%E5%90%8E%E5%8F%B0%E7%94%9F%E6%88%90%E5%95%86%E5%93%81SKU%E8%A7%84%E6%A0%BC%E5%88%97%E8%A1%A8/</url>
    <content><![CDATA[<blockquote>
<p>前两个月刚入职一家新公司，由于公司是电商性质的，需要二开商城功能，重新做SKU列表，<br>由于时间紧张采用了<a href="https://hooray.github.io/vue-sku-form/">vue-sku-form</a> 这个组件；需要的可以参考；</p>
</blockquote>
<h6 id="最近终于有时间了-自己将SKU-撸了一遍"><a href="#最近终于有时间了-自己将SKU-撸了一遍" class="headerlink" title="最近终于有时间了 自己将SKU 撸了一遍"></a>最近终于有时间了 自己将SKU 撸了一遍</h6><h6 id="技术栈是-vue-element"><a href="#技术栈是-vue-element" class="headerlink" title="技术栈是 vue+element"></a>技术栈是 vue+element</h6><h4 id="先上预览图"><a href="#先上预览图" class="headerlink" title="先上预览图"></a>先上预览图</h4><p><img src="https://me--images.oss-cn-chengdu.aliyuncs.com/blog/sku.png" alt="SKU-预览图"></p>
<h4 id="1-先写HTML部分"><a href="#1-先写HTML部分" class="headerlink" title="1. 先写HTML部分"></a>1. 先写HTML部分</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;sku_select&quot;</span>&gt;</span><br><span class="line">    &lt;!-- 添加规格--&gt;</span><br><span class="line">    &lt;el-row&gt;</span><br><span class="line">        &lt;el-col :span=<span class="string">&#x27;2&#x27;</span>&gt;添加规格:&lt;/el-col&gt;</span><br><span class="line">        &lt;el-col :span=<span class="string">&#x27;8&#x27;</span>&gt;</span><br><span class="line">            &lt;el-input v-model=<span class="string">&#x27;Specs&#x27;</span> placeholder=<span class="string">&quot;请输入内容&quot;</span> size=<span class="string">&#x27;small&#x27;</span> @keyup.enter.native=<span class="string">&#x27;addSpecs&#x27;</span>&gt;</span><br><span class="line">                &lt;el-button slot=<span class="string">&quot;append&quot;</span> @click=<span class="string">&#x27;addSpecs&#x27;</span>&gt;添加规格&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-input&gt;</span><br><span class="line">        &lt;/el-col&gt;</span><br><span class="line">    &lt;/el-row&gt;</span><br><span class="line">    &lt;!-- 添加参数--&gt;</span><br><span class="line">    &lt;el-row class=<span class="string">&quot;specs_box&quot;</span>&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;specs_item&quot;</span> v-for=<span class="string">&#x27;(item,i) of SpecsList&#x27;</span> :key=<span class="string">&#x27;i&#x27;</span>&gt;</span><br><span class="line">            &lt;div class=<span class="string">&quot;specs_titt&quot;</span>&gt;&#123;&#123;item.key&#125;&#125;&lt;/div&gt;</span><br><span class="line">            &lt;div class=<span class="string">&quot;specs_key&quot;</span>&gt;</span><br><span class="line">                &lt;el-checkbox-group v-model=<span class="string">&quot;item.checkedAttr&quot;</span> @change=<span class="string">&#x27;checkboxChange(item)&#x27;</span>&gt;</span><br><span class="line">                    &lt;el-checkbox v-for=<span class="string">&quot;(value,j) in item.value&quot;</span> :label=<span class="string">&quot;value&quot;</span> :key=<span class="string">&quot;j&quot;</span>&gt;&#123;&#123;value&#125;&#125;&lt;/el-checkbox&gt;</span><br><span class="line">                &lt;/el-checkbox-group&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=<span class="string">&quot;specs_add&quot;</span>&gt;</span><br><span class="line">                &lt;el-input placeholder=<span class="string">&quot;请输入内容&quot;</span> v-model=<span class="string">&#x27;attribute&#x27;</span> size=<span class="string">&#x27;small&#x27;</span> @keyup.enter.native=<span class="string">&#x27;addAttribute(item,i)&#x27;</span>&gt;</span><br><span class="line">                    &lt;el-button slot=<span class="string">&quot;append&quot;</span> @click=<span class="string">&#x27;addAttribute(item,i)&#x27;</span>&gt;添加参数&lt;/el-button&gt;</span><br><span class="line">                &lt;/el-input&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/el-row&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;!-- SKU 表格--&gt;</span><br><span class="line">&lt;div class=<span class="string">&quot;table_box&quot;</span>&gt;</span><br><span class="line">    &lt;el-table ref=<span class="string">&#x27;SkuData&#x27;</span> :data=<span class="string">&quot;SkuData&quot;</span> style=<span class="string">&quot;width: 100%&quot;</span> border&gt;</span><br><span class="line">        &lt;!-- &lt;el-table-column align=<span class="string">&quot;center&quot;</span> v-for=<span class="string">&quot;(item, i) of checkedAttr&quot;</span> :key=<span class="string">&quot;i&quot;</span>&gt;</span><br><span class="line">            &lt;template slot=<span class="string">&quot;header&quot;</span> slot-scope=<span class="string">&quot;scope&quot;</span>&gt;</span><br><span class="line">                &#123;&#123;item.key&#125;&#125;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;template slot-scope=<span class="string">&quot;scope&quot;</span>&gt;</span><br><span class="line">                &#123;&#123; scope.row.price &#125;&#125;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">        &lt;/el-table-column&gt; --&gt;</span><br><span class="line">        &lt;template v-for=<span class="string">&quot;(item, index) in checkedAttr&quot;</span>&gt;</span><br><span class="line">            &lt;el-table-column</span><br><span class="line">                :label=<span class="string">&quot;item.key&quot;</span></span><br><span class="line">                :key=<span class="string">&quot;index&quot;</span></span><br><span class="line">                align=<span class="string">&#x27;center&#x27;</span>&gt;</span><br><span class="line">                &lt;template slot-scope=<span class="string">&quot;scope&quot;</span>&gt;</span><br><span class="line">                    &#123;&#123; scope.row[item.key]&#125;&#125;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">        &lt;el-table-column label=<span class="string">&quot;价格&quot;</span> align=<span class="string">&#x27;center&#x27;</span>&gt;</span><br><span class="line">            &lt;template slot-scope=<span class="string">&#x27;scope&#x27;</span>&gt;</span><br><span class="line">                &lt;el-input v-model=<span class="string">&#x27;scope.row.price&#x27;</span>&gt;&lt;/el-input&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">        &lt;el-table-column label=<span class="string">&quot;库存&quot;</span> align=<span class="string">&#x27;center&#x27;</span>&gt;</span><br><span class="line">            &lt;template slot-scope=<span class="string">&#x27;scope&#x27;</span>&gt;</span><br><span class="line">                &lt;el-input v-model=<span class="string">&#x27;scope.row.stock&#x27;</span>&gt;&lt;/el-input&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">        &lt;/el-table-column&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;!-- SKU 数据--&gt;</span><br><span class="line">  &lt;div&gt;&#123;&#123;table&#125;&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h4 id="2-CSS-样式"><a href="#2-CSS-样式" class="headerlink" title="2. CSS 样式"></a>2. CSS 样式</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.sku_select &#123;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.specs_box &#123;</span><br><span class="line">    margin: 10px 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.specs_item &#123;</span><br><span class="line">    width: 300px;</span><br><span class="line">    height: auto;</span><br><span class="line">    border-radius: 5px;</span><br><span class="line">    border: 1px solid <span class="comment">#DCDFE6;</span></span><br><span class="line">    overflow: hidden;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    margin: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.specs_titt &#123;</span><br><span class="line">    height: 40px;</span><br><span class="line">    line-height: 40px;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">    padding: 0 10px;</span><br><span class="line">    border-bottom: 1px solid <span class="comment">#DCDFE6;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.specs_key &#123;</span><br><span class="line">    padding: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.specs_add &#123;</span><br><span class="line">    padding: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="3-JS-部分"><a href="#3-JS-部分" class="headerlink" title="3. JS 部分"></a>3. JS 部分</h4><h6 id="data详情"><a href="#data详情" class="headerlink" title="data详情"></a>data详情</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">data</span></span>() &#123;</span><br><span class="line">       <span class="built_in">return</span> &#123;</span><br><span class="line">           SkuData: [], //skudata</span><br><span class="line">           Specs: <span class="string">&quot;&quot;</span>, //添加的规格值</span><br><span class="line">           attribute: <span class="string">&quot;&quot;</span>, //添加的参数值</span><br><span class="line">           checkedAttr: [], //勾选详情</span><br><span class="line">           SpecsList: [</span><br><span class="line">               &#123; key: <span class="string">&#x27;颜色&#x27;</span>, value: [<span class="string">&quot;黑&quot;</span>, <span class="string">&quot;白&quot;</span>], checkedAttr: [] &#125;,</span><br><span class="line">               &#123; key: <span class="string">&#x27;尺寸&#x27;</span>, value: [<span class="string">&quot;14寸&quot;</span>, <span class="string">&quot;15寸&quot;</span>], checkedAttr: [] &#125;,</span><br><span class="line">               &#123; key: <span class="string">&#x27;储存盘&#x27;</span>, value: [<span class="string">&quot;固态&quot;</span>, <span class="string">&quot;机械&quot;</span>], checkedAttr: [] &#125;,</span><br><span class="line">           ], //规格详情</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;,</span><br></pre></td></tr></table></figure>
<h6 id="添加规格"><a href="#添加规格" class="headerlink" title="添加规格"></a>添加规格</h6><p>首先判断输入值是否为空，为空则让其抛出，如果值存在，再判断规格列表是否存在规格做规格名称重复验证；</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">addSpecs</span></span>() &#123;</span><br><span class="line">    var that = this;</span><br><span class="line">    var val = that.Specs;</span><br><span class="line">    var list = that.SpecsList;</span><br><span class="line">    <span class="keyword">if</span> (val) &#123; //判断输入值是否为空</span><br><span class="line">        <span class="keyword">if</span> (list.length &gt; 0) &#123; // 判断是否存在规格</span><br><span class="line">            <span class="keyword">for</span> (var i = 0; i &lt; list.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (list[i].key == val) &#123;</span><br><span class="line">                    alert(<span class="string">&#x27;名称重复&#x27;</span>) // 验证规格名称是否重复</span><br><span class="line">                    that.Specs = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                    <span class="built_in">return</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            list.push(&#123; //没有重复 则push到数组中</span><br><span class="line">                <span class="string">&quot;key&quot;</span>: val,</span><br><span class="line">                <span class="string">&quot;value&quot;</span>: [],</span><br><span class="line">                <span class="string">&quot;checkedAttr&quot;</span>: []</span><br><span class="line">            &#125;)</span><br><span class="line">            that.Specs = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; // 如果不存在 则push到数组里</span><br><span class="line">            list.push(&#123;</span><br><span class="line">                <span class="string">&quot;key&quot;</span>: val,</span><br><span class="line">                <span class="string">&quot;value&quot;</span>: [],</span><br><span class="line">                <span class="string">&quot;checkedAttr&quot;</span>: []</span><br><span class="line">            &#125;)</span><br><span class="line">            that.Specs = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(<span class="string">&#x27;不能为空&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<h6 id="添加参数"><a href="#添加参数" class="headerlink" title="添加参数"></a>添加参数</h6><p>首先判断输入值是否为空，为空则让其抛出，如果值存在，再判断参数列表是否存在参数做参数名称重复验证；</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">addAttribute(value, i) &#123;</span><br><span class="line">      console.log(this.attribute)</span><br><span class="line">      var list = this.SpecsList[i].value;</span><br><span class="line">      <span class="keyword">if</span> (this.attribute) &#123; //参数是否为空</span><br><span class="line">          <span class="keyword">if</span> (list.indexOf(this.attribute) != -1) &#123; //查找参数是否存在</span><br><span class="line">              <span class="built_in">return</span> alert(<span class="string">&quot;已存在&quot;</span>)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              this.SpecsList[i].value.push(this.attribute);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          alert(<span class="string">&quot;不能为空&quot;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      console.log(this.SpecsList)</span><br><span class="line">      this.attribute = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h6 id="勾选参数"><a href="#勾选参数" class="headerlink" title="勾选参数"></a>勾选参数</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">setTableData(attrArr) &#123;</span><br><span class="line">    var that = this;</span><br><span class="line">    <span class="built_in">let</span> list = attrArr;</span><br><span class="line">    const reducer = (accumulator, currentValue) =&gt; &#123;</span><br><span class="line">        var data = [];</span><br><span class="line">        console.log(accumulator, currentValue, <span class="string">&#x27;//////&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> (accumulator.length) &#123; //判断accumulator是否为第一次传入</span><br><span class="line">            accumulator.forEach(element =&gt; &#123;</span><br><span class="line">                currentValue.value.forEach(value =&gt; &#123;</span><br><span class="line">                    <span class="built_in">let</span> obj = &#123;&#125;;</span><br><span class="line">                    <span class="keyword">for</span> (var el <span class="keyword">in</span> element) &#123;</span><br><span class="line">                        // console.log(el + <span class="string">&quot;....&quot;</span> + element[el]);</span><br><span class="line">                        <span class="built_in">let</span> key = currentValue.key;</span><br><span class="line">                        obj[key] = value;</span><br><span class="line">                        obj[el] = element[el];</span><br><span class="line">                        obj[<span class="string">&#x27;price&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                        obj[<span class="string">&#x27;stock&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    data.push(obj)</span><br><span class="line"></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            accumulator.value.forEach(el =&gt; &#123;</span><br><span class="line">                currentValue.value.forEach(value =&gt; &#123;</span><br><span class="line">                    <span class="built_in">let</span> obj = &#123;&#125;;</span><br><span class="line">                    <span class="built_in">let</span> key = accumulator.key;</span><br><span class="line">                    obj[key] = el;</span><br><span class="line">                    <span class="built_in">let</span> key1 = currentValue.key;</span><br><span class="line">                    obj[key1] = value;</span><br><span class="line">                    obj[<span class="string">&#x27;price&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                    obj[<span class="string">&#x27;stock&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                    data.push(obj)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> that.SkuData = data</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span> (list.length == 1) &#123; //判断是否选择了一个规格</span><br><span class="line">        console.log(list); </span><br><span class="line">        var data = [];</span><br><span class="line">        <span class="keyword">for</span> (var i = 0; i &lt; list[0].value.length; i++) &#123;</span><br><span class="line">            var obj = &#123;&#125;;</span><br><span class="line">            var key = list[0].key;</span><br><span class="line">            obj[key] = list[0].value[i];</span><br><span class="line">            obj[<span class="string">&#x27;price&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            obj[<span class="string">&#x27;stock&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            data.push(obj)</span><br><span class="line">        &#125;</span><br><span class="line">        that.SkuData = data</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        that.SkuData = list.reduce(reducer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<h6 id="在computed中监听SKUData"><a href="#在computed中监听SKUData" class="headerlink" title="在computed中监听SKUData"></a>在computed中监听SKUData</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">    <span class="function"><span class="title">table</span></span>() &#123;</span><br><span class="line">        var data = this.SkuData;</span><br><span class="line">        <span class="built_in">return</span> data</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>到此 简单的Sku 商品规格组合就算是完成了 ； </p>
<h6 id="后续会更新其他功能"><a href="#后续会更新其他功能" class="headerlink" title="后续会更新其他功能"></a>后续会更新其他功能</h6>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>JavaScript</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 常用命令</title>
    <url>/hexo%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h3 id="hexo的一些常用命令，包括创建文本，清除缓存，本地预览，打包处理，推送至服务器；"><a href="#hexo的一些常用命令，包括创建文本，清除缓存，本地预览，打包处理，推送至服务器；" class="headerlink" title="hexo的一些常用命令，包括创建文本，清除缓存，本地预览，打包处理，推送至服务器；"></a>hexo的一些常用命令，包括创建文本，清除缓存，本地预览，打包处理，推送至服务器；</h3><h3 id="创建一篇新文章"><a href="#创建一篇新文章" class="headerlink" title="创建一篇新文章"></a>创建一篇新文章</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new  XXX</span><br><span class="line">或</span><br><span class="line">hexo n XXX</span><br></pre></td></tr></table></figure>
<h3 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>

<h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server</span><br><span class="line">或</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<h3 id="打包处理"><a href="#打包处理" class="headerlink" title="打包处理"></a>打包处理</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">或</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<h3 id="推送至服务器-git"><a href="#推送至服务器-git" class="headerlink" title="推送至服务器/git"></a>推送至服务器/git</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br><span class="line">或</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>element-UI el-table表格数据dialog修改数据table数据也随之变化</title>
    <url>/vue-1/</url>
    <content><![CDATA[<blockquote>
<h6 id="在Vue后台项目中常用到el-table表格。当需要修改单行表格数据时，我们在dialog中修改数据，遮罩层下边的table里边的数据也在随之改变。"><a href="#在Vue后台项目中常用到el-table表格。当需要修改单行表格数据时，我们在dialog中修改数据，遮罩层下边的table里边的数据也在随之改变。" class="headerlink" title="在Vue后台项目中常用到el-table表格。当需要修改单行表格数据时，我们在dialog中修改数据，遮罩层下边的table里边的数据也在随之改变。"></a>在Vue后台项目中常用到el-table表格。当需要修改单行表格数据时，我们在dialog中修改数据，遮罩层下边的table里边的数据也在随之改变。</h6></blockquote>
<blockquote>
<h6 id="其原因便是赋值的数据是一个object引用数据类型共享的一个内存区域，所以不能直接连等-赋值-，需要重新指向一个新的引用。"><a href="#其原因便是赋值的数据是一个object引用数据类型共享的一个内存区域，所以不能直接连等-赋值-，需要重新指向一个新的引用。" class="headerlink" title="其原因便是赋值的数据是一个object引用数据类型共享的一个内存区域，所以不能直接连等 赋值 ，需要重新指向一个新的引用。"></a>其原因便是赋值的数据是一个object引用数据类型共享的一个内存区域，所以不能直接连等 赋值 ，需要重新指向一个新的引用。</h6></blockquote>
<h4 id="具体方案如下"><a href="#具体方案如下" class="headerlink" title="具体方案如下"></a>具体方案如下</h4><blockquote>
<p>赋值对象如果是个对象，则利用ES6的assign() 方法</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function(row)&#123;</span><br><span class="line">    var  tableRow&#x3D;row;</span><br><span class="line">    newRow&#x3D;Object.assign(&#123;&#125;,tableRow)</span><br><span class="line">    &#x2F;&#x2F;这样就不会共用同一个对象</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>引用类型如果是数组 ，则利用slice()方法</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">newArr&#x3D; OldArr.slice();&#x2F;&#x2F;slice会返回一个新的数组</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue+element  el-table 导出表格数据</title>
    <url>/vue-2/</url>
    <content><![CDATA[<blockquote>
<p>如果你所做的项目是一个后台管理项目，那么肯定少不了表格展示数据，而导出表格就是必备功能点了，<br>在最近的项目中使用到了Export2Excel插件，下边做一个代码归类。</p>
</blockquote>
<h4 id="第一：安装依赖"><a href="#第一：安装依赖" class="headerlink" title="第一：安装依赖"></a>第一：安装依赖</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -S file-saver xlsx</span><br><span class="line"></span><br><span class="line">npm install -D script-loader</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h4 id="第二：在目录里新建excel文件夹"><a href="#第二：在目录里新建excel文件夹" class="headerlink" title="第二：在目录里新建excel文件夹"></a>第二：在目录里新建excel文件夹</h4><h6 id="在excel文件夹里新建三个js文件"><a href="#在excel文件夹里新建三个js文件" class="headerlink" title="在excel文件夹里新建三个js文件"></a>在excel文件夹里新建三个js文件</h6><p>（Blob.js、Export2Excel.js和util.js）</p>
<p><img src="https://me--images.oss-cn-chengdu.aliyuncs.com/099b43e4c7bd18bc0494ca547910de7.png" alt="image"></p>
<hr>
<h6 id="Blob-js"><a href="#Blob-js" class="headerlink" title="Blob.js"></a>Blob.js</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* eslint-disable *&#x2F;</span><br><span class="line">&#x2F;* Blob.js</span><br><span class="line"> * A Blob implementation.</span><br><span class="line"> * 2014-05-27</span><br><span class="line"> *</span><br><span class="line"> * By Eli Grey, http:&#x2F;&#x2F;eligrey.com</span><br><span class="line"> * By Devin Samarin, https:&#x2F;&#x2F;github.com&#x2F;eboyjr</span><br><span class="line"> * License: X11&#x2F;MIT</span><br><span class="line"> *   See LICENSE.md</span><br><span class="line"> *&#x2F;</span><br><span class="line"> </span><br><span class="line">&#x2F;*global self, unescape *&#x2F;</span><br><span class="line">&#x2F;*jslint bitwise: true, regexp: true, confusion: true, es5: true, vars: true, white: true,</span><br><span class="line"> plusplus: true *&#x2F;</span><br><span class="line"> </span><br><span class="line">&#x2F;*! @source http:&#x2F;&#x2F;purl.eligrey.com&#x2F;github&#x2F;Blob.js&#x2F;blob&#x2F;master&#x2F;Blob.js *&#x2F;</span><br><span class="line"> </span><br><span class="line">(function (view) &#123;</span><br><span class="line">    &quot;use strict&quot;;</span><br><span class="line"> </span><br><span class="line">    view.URL &#x3D; view.URL || view.webkitURL;</span><br><span class="line"> </span><br><span class="line">    if (view.Blob &amp;&amp; view.URL) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            new Blob;</span><br><span class="line">            return;</span><br><span class="line">        &#125; catch (e) &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    &#x2F;&#x2F; Internally we use a BlobBuilder implementation to base Blob off of</span><br><span class="line">    &#x2F;&#x2F; in order to support older browsers that only have BlobBuilder</span><br><span class="line">    var BlobBuilder &#x3D; view.BlobBuilder || view.WebKitBlobBuilder || view.MozBlobBuilder || (function(view) &#123;</span><br><span class="line">            var</span><br><span class="line">                get_class &#x3D; function(object) &#123;</span><br><span class="line">                    return Object.prototype.toString.call(object).match(&#x2F;^\[object\s(.*)\]$&#x2F;)[1];</span><br><span class="line">                &#125;</span><br><span class="line">                , FakeBlobBuilder &#x3D; function BlobBuilder() &#123;</span><br><span class="line">                    this.data &#x3D; [];</span><br><span class="line">                &#125;</span><br><span class="line">                , FakeBlob &#x3D; function Blob(data, type, encoding) &#123;</span><br><span class="line">                    this.data &#x3D; data;</span><br><span class="line">                    this.size &#x3D; data.length;</span><br><span class="line">                    this.type &#x3D; type;</span><br><span class="line">                    this.encoding &#x3D; encoding;</span><br><span class="line">                &#125;</span><br><span class="line">                , FBB_proto &#x3D; FakeBlobBuilder.prototype</span><br><span class="line">                , FB_proto &#x3D; FakeBlob.prototype</span><br><span class="line">                , FileReaderSync &#x3D; view.FileReaderSync</span><br><span class="line">                , FileException &#x3D; function(type) &#123;</span><br><span class="line">                    this.code &#x3D; this[this.name &#x3D; type];</span><br><span class="line">                &#125;</span><br><span class="line">                , file_ex_codes &#x3D; (</span><br><span class="line">                    &quot;NOT_FOUND_ERR SECURITY_ERR ABORT_ERR NOT_READABLE_ERR ENCODING_ERR &quot;</span><br><span class="line">                    + &quot;NO_MODIFICATION_ALLOWED_ERR INVALID_STATE_ERR SYNTAX_ERR&quot;</span><br><span class="line">                ).split(&quot; &quot;)</span><br><span class="line">                , file_ex_code &#x3D; file_ex_codes.length</span><br><span class="line">                , real_URL &#x3D; view.URL || view.webkitURL || view</span><br><span class="line">                , real_create_object_URL &#x3D; real_URL.createObjectURL</span><br><span class="line">                , real_revoke_object_URL &#x3D; real_URL.revokeObjectURL</span><br><span class="line">                , URL &#x3D; real_URL</span><br><span class="line">                , btoa &#x3D; view.btoa</span><br><span class="line">                , atob &#x3D; view.atob</span><br><span class="line"> </span><br><span class="line">                , ArrayBuffer &#x3D; view.ArrayBuffer</span><br><span class="line">                , Uint8Array &#x3D; view.Uint8Array</span><br><span class="line">                ;</span><br><span class="line">            FakeBlob.fake &#x3D; FB_proto.fake &#x3D; true;</span><br><span class="line">            while (file_ex_code--) &#123;</span><br><span class="line">                FileException.prototype[file_ex_codes[file_ex_code]] &#x3D; file_ex_code + 1;</span><br><span class="line">            &#125;</span><br><span class="line">            if (!real_URL.createObjectURL) &#123;</span><br><span class="line">                URL &#x3D; view.URL &#x3D; &#123;&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            URL.createObjectURL &#x3D; function(blob) &#123;</span><br><span class="line">                var</span><br><span class="line">                    type &#x3D; blob.type</span><br><span class="line">                    , data_URI_header</span><br><span class="line">                    ;</span><br><span class="line">                if (type &#x3D;&#x3D;&#x3D; null) &#123;</span><br><span class="line">                    type &#x3D; &quot;application&#x2F;octet-stream&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                if (blob instanceof FakeBlob) &#123;</span><br><span class="line">                    data_URI_header &#x3D; &quot;data:&quot; + type;</span><br><span class="line">                    if (blob.encoding &#x3D;&#x3D;&#x3D; &quot;base64&quot;) &#123;</span><br><span class="line">                        return data_URI_header + &quot;;base64,&quot; + blob.data;</span><br><span class="line">                    &#125; else if (blob.encoding &#x3D;&#x3D;&#x3D; &quot;URI&quot;) &#123;</span><br><span class="line">                        return data_URI_header + &quot;,&quot; + decodeURIComponent(blob.data);</span><br><span class="line">                    &#125; if (btoa) &#123;</span><br><span class="line">                        return data_URI_header + &quot;;base64,&quot; + btoa(blob.data);</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        return data_URI_header + &quot;,&quot; + encodeURIComponent(blob.data);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; else if (real_create_object_URL) &#123;</span><br><span class="line">                    return real_create_object_URL.call(real_URL, blob);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            URL.revokeObjectURL &#x3D; function(object_URL) &#123;</span><br><span class="line">                if (object_URL.substring(0, 5) !&#x3D;&#x3D; &quot;data:&quot; &amp;&amp; real_revoke_object_URL) &#123;</span><br><span class="line">                    real_revoke_object_URL.call(real_URL, object_URL);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            FBB_proto.append &#x3D; function(data&#x2F;*, endings*&#x2F;) &#123;</span><br><span class="line">                var bb &#x3D; this.data;</span><br><span class="line">                &#x2F;&#x2F; decode data to a binary string</span><br><span class="line">                if (Uint8Array &amp;&amp; (data instanceof ArrayBuffer || data instanceof Uint8Array)) &#123;</span><br><span class="line">                    var</span><br><span class="line">                        str &#x3D; &quot;&quot;</span><br><span class="line">                        , buf &#x3D; new Uint8Array(data)</span><br><span class="line">                        , i &#x3D; 0</span><br><span class="line">                        , buf_len &#x3D; buf.length</span><br><span class="line">                        ;</span><br><span class="line">                    for (; i &lt; buf_len; i++) &#123;</span><br><span class="line">                        str +&#x3D; String.fromCharCode(buf[i]);</span><br><span class="line">                    &#125;</span><br><span class="line">                    bb.push(str);</span><br><span class="line">                &#125; else if (get_class(data) &#x3D;&#x3D;&#x3D; &quot;Blob&quot; || get_class(data) &#x3D;&#x3D;&#x3D; &quot;File&quot;) &#123;</span><br><span class="line">                    if (FileReaderSync) &#123;</span><br><span class="line">                        var fr &#x3D; new FileReaderSync;</span><br><span class="line">                        bb.push(fr.readAsBinaryString(data));</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        &#x2F;&#x2F; async FileReader won&#39;t work as BlobBuilder is sync</span><br><span class="line">                        throw new FileException(&quot;NOT_READABLE_ERR&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; else if (data instanceof FakeBlob) &#123;</span><br><span class="line">                    if (data.encoding &#x3D;&#x3D;&#x3D; &quot;base64&quot; &amp;&amp; atob) &#123;</span><br><span class="line">                        bb.push(atob(data.data));</span><br><span class="line">                    &#125; else if (data.encoding &#x3D;&#x3D;&#x3D; &quot;URI&quot;) &#123;</span><br><span class="line">                        bb.push(decodeURIComponent(data.data));</span><br><span class="line">                    &#125; else if (data.encoding &#x3D;&#x3D;&#x3D; &quot;raw&quot;) &#123;</span><br><span class="line">                        bb.push(data.data);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    if (typeof data !&#x3D;&#x3D; &quot;string&quot;) &#123;</span><br><span class="line">                        data +&#x3D; &quot;&quot;; &#x2F;&#x2F; convert unsupported types to strings</span><br><span class="line">                    &#125;</span><br><span class="line">                    &#x2F;&#x2F; decode UTF-16 to binary string</span><br><span class="line">                    bb.push(unescape(encodeURIComponent(data)));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            FBB_proto.getBlob &#x3D; function(type) &#123;</span><br><span class="line">                if (!arguments.length) &#123;</span><br><span class="line">                    type &#x3D; null;</span><br><span class="line">                &#125;</span><br><span class="line">                return new FakeBlob(this.data.join(&quot;&quot;), type, &quot;raw&quot;);</span><br><span class="line">            &#125;;</span><br><span class="line">            FBB_proto.toString &#x3D; function() &#123;</span><br><span class="line">                return &quot;[object BlobBuilder]&quot;;</span><br><span class="line">            &#125;;</span><br><span class="line">            FB_proto.slice &#x3D; function(start, end, type) &#123;</span><br><span class="line">                var args &#x3D; arguments.length;</span><br><span class="line">                if (args &lt; 3) &#123;</span><br><span class="line">                    type &#x3D; null;</span><br><span class="line">                &#125;</span><br><span class="line">                return new FakeBlob(</span><br><span class="line">                    this.data.slice(start, args &gt; 1 ? end : this.data.length)</span><br><span class="line">                    , type</span><br><span class="line">                    , this.encoding</span><br><span class="line">                );</span><br><span class="line">            &#125;;</span><br><span class="line">            FB_proto.toString &#x3D; function() &#123;</span><br><span class="line">                return &quot;[object Blob]&quot;;</span><br><span class="line">            &#125;;</span><br><span class="line">            FB_proto.close &#x3D; function() &#123;</span><br><span class="line">                this.size &#x3D; this.data.length &#x3D; 0;</span><br><span class="line">            &#125;;</span><br><span class="line">            return FakeBlobBuilder;</span><br><span class="line">        &#125;(view));</span><br><span class="line"> </span><br><span class="line">    view.Blob &#x3D; function Blob(blobParts, options) &#123;</span><br><span class="line">        var type &#x3D; options ? (options.type || &quot;&quot;) : &quot;&quot;;</span><br><span class="line">        var builder &#x3D; new BlobBuilder();</span><br><span class="line">        if (blobParts) &#123;</span><br><span class="line">            for (var i &#x3D; 0, len &#x3D; blobParts.length; i &lt; len; i++) &#123;</span><br><span class="line">                builder.append(blobParts[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return builder.getBlob(type);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;(typeof self !&#x3D;&#x3D; &quot;undefined&quot; &amp;&amp; self || typeof window !&#x3D;&#x3D; &quot;undefined&quot; &amp;&amp; window || this.content || this));</span><br></pre></td></tr></table></figure>
<hr>
<h6 id="Export2Excel-js"><a href="#Export2Excel-js" class="headerlink" title="Export2Excel.js"></a>Export2Excel.js</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* eslint-disable *&#x2F;</span><br><span class="line">require(&#39;script-loader!file-saver&#39;);</span><br><span class="line">require(&#39;.&#x2F;Blob&#39;);</span><br><span class="line">require(&#39;script-loader!xlsx&#x2F;dist&#x2F;xlsx.core.min&#39;);</span><br><span class="line">function generateArray(table) &#123;</span><br><span class="line">    var out &#x3D; [];</span><br><span class="line">    var rows &#x3D; table.querySelectorAll(&#39;tr&#39;);</span><br><span class="line">    var ranges &#x3D; [];</span><br><span class="line">    for (var R &#x3D; 0; R &lt; rows.length; ++R) &#123;</span><br><span class="line">        var outRow &#x3D; [];</span><br><span class="line">        var row &#x3D; rows[R];</span><br><span class="line">        var columns &#x3D; row.querySelectorAll(&#39;td&#39;);</span><br><span class="line">        for (var C &#x3D; 0; C &lt; columns.length; ++C) &#123;</span><br><span class="line">            var cell &#x3D; columns[C];</span><br><span class="line">            var colspan &#x3D; cell.getAttribute(&#39;colspan&#39;);</span><br><span class="line">            var rowspan &#x3D; cell.getAttribute(&#39;rowspan&#39;);</span><br><span class="line">            var cellValue &#x3D; cell.innerText;</span><br><span class="line">            if (cellValue !&#x3D;&#x3D; &quot;&quot; &amp;&amp; cellValue &#x3D;&#x3D; +cellValue) cellValue &#x3D; +cellValue;</span><br><span class="line"> </span><br><span class="line">            &#x2F;&#x2F;Skip ranges</span><br><span class="line">            ranges.forEach(function (range) &#123;</span><br><span class="line">                if (R &gt;&#x3D; range.s.r &amp;&amp; R &lt;&#x3D; range.e.r &amp;&amp; outRow.length &gt;&#x3D; range.s.c &amp;&amp; outRow.length &lt;&#x3D; range.e.c) &#123;</span><br><span class="line">                    for (var i &#x3D; 0; i &lt;&#x3D; range.e.c - range.s.c; ++i) outRow.push(null);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"> </span><br><span class="line">            &#x2F;&#x2F;Handle Row Span</span><br><span class="line">            if (rowspan || colspan) &#123;</span><br><span class="line">                rowspan &#x3D; rowspan || 1;</span><br><span class="line">                colspan &#x3D; colspan || 1;</span><br><span class="line">                ranges.push(&#123;s: &#123;r: R, c: outRow.length&#125;, e: &#123;r: R + rowspan - 1, c: outRow.length + colspan - 1&#125;&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            ;</span><br><span class="line"> </span><br><span class="line">            &#x2F;&#x2F;Handle Value</span><br><span class="line">            outRow.push(cellValue !&#x3D;&#x3D; &quot;&quot; ? cellValue : null);</span><br><span class="line"> </span><br><span class="line">            &#x2F;&#x2F;Handle Colspan</span><br><span class="line">            if (colspan) for (var k &#x3D; 0; k &lt; colspan - 1; ++k) outRow.push(null);</span><br><span class="line">        &#125;</span><br><span class="line">        out.push(outRow);</span><br><span class="line">    &#125;</span><br><span class="line">    return [out, ranges];</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line">function datenum(v, date1904) &#123;</span><br><span class="line">    if (date1904) v +&#x3D; 1462;</span><br><span class="line">    var epoch &#x3D; Date.parse(v);</span><br><span class="line">    return (epoch - new Date(Date.UTC(1899, 11, 30))) &#x2F; (24 * 60 * 60 * 1000);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">function sheet_from_array_of_arrays(data, opts) &#123;</span><br><span class="line">    var ws &#x3D; &#123;&#125;;</span><br><span class="line">    var range &#x3D; &#123;s: &#123;c: 10000000, r: 10000000&#125;, e: &#123;c: 0, r: 0&#125;&#125;;</span><br><span class="line">    for (var R &#x3D; 0; R !&#x3D; data.length; ++R) &#123;</span><br><span class="line">        for (var C &#x3D; 0; C !&#x3D; data[R].length; ++C) &#123;</span><br><span class="line">            if (range.s.r &gt; R) range.s.r &#x3D; R;</span><br><span class="line">            if (range.s.c &gt; C) range.s.c &#x3D; C;</span><br><span class="line">            if (range.e.r &lt; R) range.e.r &#x3D; R;</span><br><span class="line">            if (range.e.c &lt; C) range.e.c &#x3D; C;</span><br><span class="line">            var cell &#x3D; &#123;v: data[R][C]&#125;;</span><br><span class="line">            if (cell.v &#x3D;&#x3D; null) continue;</span><br><span class="line">            var cell_ref &#x3D; XLSX.utils.encode_cell(&#123;c: C, r: R&#125;);</span><br><span class="line"> </span><br><span class="line">            if (typeof cell.v &#x3D;&#x3D;&#x3D; &#39;number&#39;) cell.t &#x3D; &#39;n&#39;;</span><br><span class="line">            else if (typeof cell.v &#x3D;&#x3D;&#x3D; &#39;boolean&#39;) cell.t &#x3D; &#39;b&#39;;</span><br><span class="line">            else if (cell.v instanceof Date) &#123;</span><br><span class="line">                cell.t &#x3D; &#39;n&#39;;</span><br><span class="line">                cell.z &#x3D; XLSX.SSF._table[14];</span><br><span class="line">                cell.v &#x3D; datenum(cell.v);</span><br><span class="line">            &#125;</span><br><span class="line">            else cell.t &#x3D; &#39;s&#39;;</span><br><span class="line"> </span><br><span class="line">            ws[cell_ref] &#x3D; cell;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if (range.s.c &lt; 10000000) ws[&#39;!ref&#39;] &#x3D; XLSX.utils.encode_range(range);</span><br><span class="line">    return ws;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">function Workbook() &#123;</span><br><span class="line">    if (!(this instanceof Workbook)) return new Workbook();</span><br><span class="line">    this.SheetNames &#x3D; [];</span><br><span class="line">    this.Sheets &#x3D; &#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">function s2ab(s) &#123;</span><br><span class="line">    var buf &#x3D; new ArrayBuffer(s.length);</span><br><span class="line">    var view &#x3D; new Uint8Array(buf);</span><br><span class="line">    for (var i &#x3D; 0; i !&#x3D; s.length; ++i) view[i] &#x3D; s.charCodeAt(i) &amp; 0xFF;</span><br><span class="line">    return buf;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">export function export_table_to_excel(id) &#123;</span><br><span class="line">    var theTable &#x3D; document.getElementById(id);</span><br><span class="line">    console.log(&#39;a&#39;)</span><br><span class="line">    var oo &#x3D; generateArray(theTable);</span><br><span class="line">    var ranges &#x3D; oo[1];</span><br><span class="line"> </span><br><span class="line">    &#x2F;* original data *&#x2F;</span><br><span class="line">    var data &#x3D; oo[0];</span><br><span class="line">    var ws_name &#x3D; &quot;SheetJS&quot;;</span><br><span class="line">    console.log(data);</span><br><span class="line"> </span><br><span class="line">    var wb &#x3D; new Workbook(), ws &#x3D; sheet_from_array_of_arrays(data);</span><br><span class="line"> </span><br><span class="line">    &#x2F;* add ranges to worksheet *&#x2F;</span><br><span class="line">    &#x2F;&#x2F; ws[&#39;!cols&#39;] &#x3D; [&#39;apple&#39;, &#39;banan&#39;];</span><br><span class="line">    ws[&#39;!merges&#39;] &#x3D; ranges;</span><br><span class="line"> </span><br><span class="line">    &#x2F;* add worksheet to workbook *&#x2F;</span><br><span class="line">    wb.SheetNames.push(ws_name);</span><br><span class="line">    wb.Sheets[ws_name] &#x3D; ws;</span><br><span class="line"> </span><br><span class="line">    var wbout &#x3D; XLSX.write(wb, &#123;bookType: &#39;xlsx&#39;, bookSST: false, type: &#39;binary&#39;&#125;);</span><br><span class="line"> </span><br><span class="line">    saveAs(new Blob([s2ab(wbout)], &#123;type: &quot;application&#x2F;octet-stream&quot;&#125;), &quot;test.xlsx&quot;)</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">function formatJson(jsonData) &#123;</span><br><span class="line">    console.log(jsonData)</span><br><span class="line">&#125;</span><br><span class="line">export function export_json_to_excel(th, jsonData, defaultTitle) &#123;</span><br><span class="line"> </span><br><span class="line">    &#x2F;* original data *&#x2F;</span><br><span class="line"> </span><br><span class="line">    var data &#x3D; jsonData;</span><br><span class="line">    data.unshift(th);</span><br><span class="line">    var ws_name &#x3D; &quot;SheetJS&quot;;</span><br><span class="line"> </span><br><span class="line">    var wb &#x3D; new Workbook(), ws &#x3D; sheet_from_array_of_arrays(data);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    &#x2F;* add worksheet to workbook *&#x2F;</span><br><span class="line">    wb.SheetNames.push(ws_name);</span><br><span class="line">    wb.Sheets[ws_name] &#x3D; ws;</span><br><span class="line"> </span><br><span class="line">    var wbout &#x3D; XLSX.write(wb, &#123;bookType: &#39;xlsx&#39;, bookSST: false, type: &#39;binary&#39;&#125;);</span><br><span class="line">    var title &#x3D; defaultTitle || &#39;列表&#39;</span><br><span class="line">    saveAs(new Blob([s2ab(wbout)], &#123;type: &quot;application&#x2F;octet-stream&quot;&#125;), title + &quot;.xlsx&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h6 id="util-js"><a href="#util-js" class="headerlink" title="util.js"></a>util.js</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export function export2Excel(columns, list, xlseName) &#123;</span><br><span class="line">    require.ensure([], () &#x3D;&gt; &#123;</span><br><span class="line">        const &#123; export_json_to_excel &#125; &#x3D; require(&#39;.&#x2F;Export2Excel&#39;);</span><br><span class="line">        let tHeader &#x3D; []</span><br><span class="line">        let filterVal &#x3D; []</span><br><span class="line">            &#x2F;&#x2F; console.log(columns)</span><br><span class="line">        if (!columns) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        columns.forEach(item &#x3D;&gt; &#123;</span><br><span class="line">            tHeader.push(item.title)</span><br><span class="line">            filterVal.push(item.key)</span><br><span class="line">        &#125;)</span><br><span class="line">        const data &#x3D; list.map(v &#x3D;&gt; filterVal.map(j &#x3D;&gt; v[j]))</span><br><span class="line">        export_json_to_excel(tHeader, data, xlseName);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h4 id="在js文件中-调用"><a href="#在js文件中-调用" class="headerlink" title="在js文件中 调用"></a>在js文件中 调用</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import &#123; export2Excel &#125; from &#39;..&#x2F;..&#x2F;common&#x2F;js&#x2F;util&#39;</span><br><span class="line"></span><br><span class="line">data()&#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      taberHeader: [</span><br><span class="line">        &#123; title: &quot;名字&quot;, key: &quot;name&quot; &#125;,&#x2F;&#x2F;初始化表头</span><br><span class="line">      ],</span><br><span class="line">      tableData:[</span><br><span class="line">        &#123;name:&quot;张&quot;&#125;</span><br><span class="line">      ],</span><br><span class="line">      tableName:&quot;商户表&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">methods:&#123;</span><br><span class="line">    export:function()&#123;</span><br><span class="line">        export2Excel(that.taberHeader, this.tableData, this.tableName);  </span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序Canvas制作海报</title>
    <url>/wx-canvas/</url>
    <content><![CDATA[<blockquote>
<p>前言：在微信小程序中，很多都需要分享，有些利用小程序本身的button按钮open-type=share的功能调用小程序原生的分享功能。<br>但有些时候做宣传时，要用到海报这种东西，这个时候就需要用到canvas去绘制一张海报<br>简单的海报，只有一张背景图和一张二维码，就以此为例</p>
</blockquote>
<h4 id="上图预览"><a href="#上图预览" class="headerlink" title="上图预览"></a>上图预览</h4><p><img src="https://me--images.oss-cn-chengdu.aliyuncs.com/blog/bsdhb.jpg" alt="cmd-markdown-logo"></p>
<h5 id="1-首先在wxml中需要写入canvas标签"><a href="#1-首先在wxml中需要写入canvas标签" class="headerlink" title="1.首先在wxml中需要写入canvas标签"></a>1.首先在wxml中需要写入canvas标签</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;canvas <span class="built_in">type</span>=<span class="string">&quot;2d&quot;</span> id=<span class="string">&#x27;myCanvas&#x27;</span> class=<span class="string">&quot;myCanvas&quot;</span>&gt;&lt;/canvas&gt;</span><br></pre></td></tr></table></figure>
<p><font color='red'>如果标签中有type=2d，那么只需要写id=”myCanvas”即可，或者也可以写成下边的标签</font></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;canvas canvas-id=<span class="string">&#x27;myCanvas&#x27;</span> class=<span class="string">&quot;myCanvas&quot;</span>&gt;&lt;/canvas&gt;</span><br></pre></td></tr></table></figure>
<p><font color='red'>这两种不同的写法，js中的用法也不同; 本文章主要使用方法一；</font></p>
<h5 id="2-在wxss中给canvas样式定义宽高"><a href="#2-在wxss中给canvas样式定义宽高" class="headerlink" title="2.在wxss中给canvas样式定义宽高"></a>2.在wxss中给canvas样式定义宽高</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.myCanvas &#123;</span><br><span class="line">  width: 576rpx;</span><br><span class="line">  height: 854rpx;</span><br><span class="line">  border-radius: 10rpx;</span><br><span class="line">  border:1rpx solid <span class="comment">#212121;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="3-js中绘制canvas"><a href="#3-js中绘制canvas" class="headerlink" title="3. js中绘制canvas"></a>3. js中绘制canvas</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">drawCanvas: <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">  var  that = this ;</span><br><span class="line">  wx.showLoading(&#123; //  给海报生成做个loading提示</span><br><span class="line">      title: <span class="string">&#x27;海报生成中&#x27;</span>,</span><br><span class="line">      icon: <span class="string">&quot;loading&quot;</span></span><br><span class="line">  &#125;)</span><br><span class="line">  const query = wx.createSelectorQuery();</span><br><span class="line">  query.select(<span class="string">&#x27;#myCanvas&#x27;</span>)  //获取canvas<span class="comment">#myCanvas节点</span></span><br><span class="line">      .fields(&#123;</span><br><span class="line">        node: <span class="literal">true</span>,</span><br><span class="line">        size: <span class="literal">true</span></span><br><span class="line">      &#125;)</span><br><span class="line">      .<span class="built_in">exec</span>((res) =&gt; &#123;</span><br><span class="line">        const canvas = res[0].node</span><br><span class="line">        const ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span><br><span class="line">        const dpr = wx.getSystemInfoSync().pixelRatio; //获取设备像素比</span><br><span class="line">        ctx.scale(dpr, dpr) // 设置画布的像素比，解决画布绘制不清晰的问题</span><br><span class="line">        canvas.width = res[0].width * dpr  //重新设置画布的宽度</span><br><span class="line">        canvas.height = res[0].height * dpr  //重新设置画布的高度</span><br><span class="line">        <span class="built_in">let</span> seal = canvas.createImage(); //创建背景图片对象</span><br><span class="line">        seal.src = <span class="string">&quot;https://image--ccccc.oss-cn-hangzhou.aliyuncs.com/bsd/ccccc.png&quot;</span>; // 赋值图片路径</span><br><span class="line">        seal.onload = () =&gt; &#123;</span><br><span class="line">          //在图片加载后将其绘制在画布上</span><br><span class="line">          //ctx.drawImage(<span class="string">&#x27;图片路径&#x27;</span>,<span class="string">&#x27;起点横坐标&#x27;</span>,<span class="string">&#x27;起点纵坐标&#x27;</span>,<span class="string">&#x27;终点横坐标&#x27;</span>,<span class="string">&#x27;终点纵坐标&#x27;</span>)；起点与终点坐标来确定画布上图片的位置与大小；</span><br><span class="line">          ctx.drawImage(seal, 0, 0, canvas.width, canvas.height);</span><br><span class="line">          <span class="built_in">let</span> qr = canvas.createImage(); //创建二维码图片对象</span><br><span class="line">          qr.src = <span class="string">&#x27;https://me--images.oss-cn-chengdu.aliyuncs.com/blog/qr.jpg&#x27;</span>  //引入二维码图片链接</span><br><span class="line">          qr.onload = () =&gt; &#123;</span><br><span class="line">            //在图片加载后将其绘制在画布上</span><br><span class="line">            ctx.drawImage(qr, canvas.width / 1.7, canvas.height / 1.35, canvas.width / 3, canvas.width / 3);</span><br><span class="line">            wx.canvasToTempFilePath(&#123; //将画布上的内容生成图片</span><br><span class="line">              x: 0, // 起点x坐标</span><br><span class="line">              y: 0, // 起点y坐标</span><br><span class="line">              width: 576,  //终点x坐标（画布的宽度）</span><br><span class="line">              height: 854,  //终点y坐标（画布的高度）</span><br><span class="line">              destWidth: 576 * 2, // 生成图片的宽度（建议为2倍）</span><br><span class="line">              destHeight: 854 * 2,  //生成图片的高度（建议为2倍）</span><br><span class="line">              canvas: canvas,  </span><br><span class="line">              // canvas为DOM节点 （如果标签存在<span class="built_in">type</span>=2d，id=<span class="string">&#x27;myCanvas&#x27;</span>则为canvas：canvas，如果标签为canvas-id=<span class="string">&quot;myCanvas&quot;</span>，则应写为canvas-id：<span class="string">&quot;#myCanvas&quot;</span>）；此处将影响图片能否生成；</span><br><span class="line">              success(res) &#123;</span><br><span class="line">                console.log(res.tempFilePath) //生成图片的本地临时路径</span><br><span class="line">                wx.hideLoading() //去除loading提示</span><br><span class="line">              &#125;,</span><br><span class="line">              fail(err) &#123;</span><br><span class="line">                console.log(err)</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<blockquote>
<p> 以上便是微信小程序canvas绘制海报的整个流程；</p>
</blockquote>
</blockquote>
]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue项目线上版本打包时去掉console输出日志</title>
    <url>/vue-3/</url>
    <content><![CDATA[<blockquote>
<p>前言：在日常的项目编写中，开发过程中，我们会在js代码中会有大量console日志输出，而这些console如果不去注释掉，那么在打包部署到正式服务器上，也同样会在调试器中打印出来。<br>以下方法是种在打包生产环境时自动注释掉console的便捷方式</p>
</blockquote>
<h4 id="Vue2-x版本"><a href="#Vue2-x版本" class="headerlink" title="Vue2.x版本"></a>Vue2.x版本</h4><blockquote>
<h6 id="在build下的webpack-prod-conf-js-中修改"><a href="#在build下的webpack-prod-conf-js-中修改" class="headerlink" title="在build下的webpack.prod.conf.js 中修改"></a>在build下的webpack.prod.conf.js 中修改</h6></blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">plugins: [</span><br><span class="line">        new webpack.DefinePlugin(&#123;</span><br><span class="line">            &#39;process.env&#39;: env</span><br><span class="line">        &#125;),</span><br><span class="line">        new UglifyJsPlugin(&#123;</span><br><span class="line">            uglifyOptions: &#123;</span><br><span class="line">                compress: &#123;</span><br><span class="line">                    warnings: false,</span><br><span class="line">                    drop_console: true,</span><br><span class="line">                    pure_funcs: [&#39;console.log&#39;]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            sourceMap: config.build.productionSourceMap,</span><br><span class="line">            parallel: true</span><br><span class="line">        &#125;)</span><br><span class="line"> ]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="Vue-3-x版本"><a href="#Vue-3-x版本" class="headerlink" title="Vue 3.x版本"></a>Vue 3.x版本</h4><blockquote>
<h6 id="自建vue-config-js"><a href="#自建vue-config-js" class="headerlink" title="自建vue.config.js"></a>自建vue.config.js</h6></blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">  lintOnSave: true,</span><br><span class="line">  &#x2F;&#x2F; 配置webpack打包</span><br><span class="line">  configureWebpack: (config) &#x3D;&gt; &#123;</span><br><span class="line">    &#x2F;&#x2F; 取消console打印    </span><br><span class="line">    config.optimization.minimizer[0].options.terserOptions.compress.drop_console &#x3D; true</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序实现下拉刷新</title>
    <url>/wxtest/</url>
    <content><![CDATA[<blockquote>
<p>在写列表页面的时候，会有下拉刷新页面的需求，微信小程序本身也提供了这类的API供前端开发者们使用；本文做一个简单的下来刷新处理；</p>
</blockquote>
<blockquote>
<p>在本文中 将要使用的微信API </p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/显示导航栏loading加载</span><br><span class="line">    ·wx.showNavigationBarLoading(Object object) </span><br><span class="line">//显示页面加载提示</span><br><span class="line">    ·wx.showLoading(Object object)</span><br><span class="line">//隐藏页面加载提示</span><br><span class="line">    ·wx.hideLoading(Object object)</span><br><span class="line">//隐藏导航栏加载提示</span><br><span class="line">    ·wx.hideNavigationBarLoading(Object object)</span><br><span class="line">//停止下拉刷新</span><br><span class="line">    ·wx.stopPullDownRefresh(Object object)</span><br></pre></td></tr></table></figure>
<h6 id="首先在json文件中引入"><a href="#首先在json文件中引入" class="headerlink" title="首先在json文件中引入"></a>首先在json文件中引入</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">     <span class="string">&quot;enablePullDownRefresh&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h6 id="然后在js-文件中"><a href="#然后在js-文件中" class="headerlink" title="然后在js 文件中"></a>然后在js 文件中</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">     /**</span><br><span class="line">     * 页面相关事件处理函数--监听用户下拉动作</span><br><span class="line">     */</span><br><span class="line">    onPullDownRefresh: <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        //调用刷新时将执行的方法</span><br><span class="line">    	this.onRefresh();</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">onRefresh</span></span>()&#123;</span><br><span class="line">        //在当前页面显示导航条加载动画</span><br><span class="line">        wx.showNavigationBarLoading(); </span><br><span class="line">        //显示 loading 提示框。需主动调用 wx.hideLoading 才能关闭提示框</span><br><span class="line">        wx.showLoading(&#123;</span><br><span class="line">          title: <span class="string">&#x27;刷新中...&#x27;</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">        setTimeout(()=&gt;&#123;</span><br><span class="line">            //隐藏loading 提示框</span><br><span class="line">                wx.hideLoading();</span><br><span class="line">                //隐藏导航条加载动画</span><br><span class="line">                wx.hideNavigationBarLoading();</span><br><span class="line">                //停止下拉刷新</span><br><span class="line">                wx.stopPullDownRefresh();</span><br><span class="line">        &#125;,3000)</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p>此外，除了下拉刷新，有时候可能是在某个事件进行时触发刷新动作，此时可以调用 wx.startPullDownRefresh(Object object) 此api的作用是：“ 开始下拉刷新。调用后触发下拉刷新动画，效果与用户手动下拉刷新一致。”</p>
</blockquote>
<h6 id="不要忘了在需要刷新结束时调用wx-stopPullDownRefresh-，否则，页面将会保持下拉状态、不会回弹。"><a href="#不要忘了在需要刷新结束时调用wx-stopPullDownRefresh-，否则，页面将会保持下拉状态、不会回弹。" class="headerlink" title="不要忘了在需要刷新结束时调用wx.stopPullDownRefresh()，否则，页面将会保持下拉状态、不会回弹。"></a><font color='#00f'>不要忘了在需要刷新结束时调用wx.stopPullDownRefresh()，否则，页面将会保持下拉状态、不会回弹。</font></h6>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序设定富文本图片宽度</title>
    <url>/wxtest1/</url>
    <content><![CDATA[<blockquote>
<p>在微信小程序中有时候需要用到微信自带的富文本组件 rich-text  如果富文本中有图片的存在，在小程序中展示图片会超出页面的宽度，这时候就需要在小程序中处理图片的宽度了</p>
</blockquote>
<h6 id="给富文本中的图片添加一个class样式"><a href="#给富文本中的图片添加一个class样式" class="headerlink" title="给富文本中的图片添加一个class样式"></a>给富文本中的图片添加一个class样式</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">var _str = data.data.replace(/&lt;img /g, <span class="string">&#x27;&lt;img class=&quot;rich_img&quot; &#x27;</span>);</span><br><span class="line">     console.log(_str)</span><br><span class="line">   that.setData(&#123;</span><br><span class="line">       msg: _str</span><br><span class="line">     &#125;)</span><br></pre></td></tr></table></figure>
<h6 id="设置class-样式详情"><a href="#设置class-样式详情" class="headerlink" title="设置class 样式详情"></a>设置class 样式详情</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.rich_img&#123;</span><br><span class="line">  max-width:100% !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序常用 api</title>
    <url>/wxtest2/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.显示导航栏加载动画</span><br><span class="line">	wx.showNavgetionBarLoading()</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2.隐藏导航栏加载动画</span><br><span class="line">	wx.hideNavgetionBarLoading()</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3.上传本地文件</span><br><span class="line">	wx.uploadFile(&#123;</span><br><span class="line">		url:&quot;&quot;,</span><br><span class="line">		filePath:&quot;&quot;,&#x2F;&#x2F;文件路径</span><br><span class="line">		name:&quot;&quot;,&#x2F;&#x2F;文件接收的参数名</span><br><span class="line">		formData:&#123;&#125;&#x2F;&#x2F;其他上传参数</span><br><span class="line">		success()&#123;&#125;,</span><br><span class="line">		fail()&#123;&#125;,</span><br><span class="line">		complate()&#123;&#125;</span><br><span class="line">	&#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4. 键盘隐藏</span><br><span class="line">	wx.hideKeyboard()</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5.隐藏顶部导航栏</span><br><span class="line">&quot;navigationStyle&quot;: &quot;custom&quot; </span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6.tabber  设置</span><br><span class="line"></span><br><span class="line">&quot;tabBar&quot;: &#123;</span><br><span class="line">       &quot;custom&quot;: true,</span><br><span class="line">       &quot;color&quot;: &quot;#000000&quot;,</span><br><span class="line">       &quot;selectedColor&quot;: &quot;#000000&quot;,</span><br><span class="line">       &quot;backgroundColor&quot;: &quot;#000000&quot;,</span><br><span class="line">       &quot;list&quot;: [&#123;</span><br><span class="line">        &quot;pagePath&quot;: &quot;pages&#x2F;index&#x2F;index&quot;,</span><br><span class="line">        &quot;text&quot;: &quot;监测&quot;,</span><br><span class="line">        &quot;iconPath&quot;: &quot;&#x2F;imgs&#x2F;index.png&quot;,</span><br><span class="line">        &quot;selectedIconPath&quot;: &quot;&#x2F;imgs&#x2F;index_active.png&quot;</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        &quot;pagePath&quot;: &quot;pages&#x2F;record&#x2F;record&quot;,</span><br><span class="line">        &quot;text&quot;: &quot;记录&quot;,</span><br><span class="line">        &quot;iconPath&quot;: &quot;&#x2F;imgs&#x2F;recording.png&quot;,</span><br><span class="line">        &quot;selectedIconPath&quot;: &quot;&#x2F;imgs&#x2F;recording_active.png&quot;</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        &quot;pagePath&quot;: &quot;pages&#x2F;main&#x2F;main&quot;,</span><br><span class="line">        &quot;text&quot;: &quot;我的&quot;,</span><br><span class="line">        &quot;iconPath&quot;: &quot;&#x2F;imgs&#x2F;main.png&quot;,</span><br><span class="line">        &quot;selectedIconPath&quot;: &quot;&#x2F;imgs&#x2F;main_active.png&quot;</span><br><span class="line">      &#125;]</span><br><span class="line">     &#125; </span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7.阻止点击事件冒泡行为</span><br><span class="line"></span><br><span class="line">    将事件的 bind 改成 catch</span><br><span class="line"></span><br><span class="line">    bind 是阻止不了冒泡的，catch 可以阻止事件的冒泡行为</span><br><span class="line"></span><br><span class="line">    例如 bindtap 改成 catchtap</span><br><span class="line">    </span><br><span class="line">    &lt;view class&#x3D;&quot;after-sales&quot; catchtap&#x3D;&quot;callPhone&quot;&gt;联系售后&lt;&#x2F;view&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序  按字母索引目录</title>
    <url>/wxtest3/</url>
    <content><![CDATA[<blockquote>
<p>在项目中经常回遇到一些目录，会有要求按照字母索引，下边的demo是微信小程序中的按字母索引，粘贴复制就行</p>
</blockquote>
<h3 id="wxml"><a href="#wxml" class="headerlink" title="wxml"></a>wxml</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;view class&#x3D;&quot;allSchool&quot;&gt;</span><br><span class="line">	&lt;scroll-view class&#x3D;&quot;flex-wrap&quot;&gt;</span><br><span class="line">		&lt;scroll-view class&#x3D;&quot;flex-left&quot; scroll-y&#x3D;&quot;true&quot; scroll-with-animation&#x3D;&#39;true&#39; scroll-into-view&#x3D;&quot;&#123;&#123;scrollIntoId&#125;&#125;&quot;&gt;</span><br><span class="line">			&lt;view wx:for&#x3D;&quot;&#123;&#123;groups&#125;&#125;&quot; wx:key&#x3D;&quot;zimu&quot; wx:for-item&#x3D;&quot;zimu&quot;&gt;</span><br><span class="line">				&lt;view class&#x3D;&quot;alllitem item-a&quot; id&#x3D;&quot;&#123;&#123;zimu.groupName&#125;&#125;&quot;&gt;&#123;&#123;zimu.groupName&#125;&#125;&lt;&#x2F;view&gt;</span><br><span class="line">				&lt;view class&#x3D;&quot;aitem&quot;&gt;</span><br><span class="line">					&lt;view class&#x3D;&quot;item&quot; wx:for&#x3D;&#39;&#123;&#123;zimu.schoolList&#125;&#125;&#39; wx:for-item&#x3D;&#39;school&#39; wx:key&#x3D;&#39;index&#39;&gt;</span><br><span class="line">						&lt;view class&#x3D;&quot;item_img&quot;&gt;</span><br><span class="line">							&lt;image src&#x3D;&quot;&#123;&#123;school.img&#125;&#125;&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">						&lt;&#x2F;view&gt;</span><br><span class="line">						&lt;view class&#x3D;&quot;school&quot;&gt;</span><br><span class="line">							&lt;view class&#x3D;&quot;s_name&quot;&gt;</span><br><span class="line">								&#123;&#123;school.titt&#125;&#125; &lt;text&gt;&#123;&#123;school.sub&#125;&#125; &lt;&#x2F;text&gt;</span><br><span class="line">							&lt;&#x2F;view&gt;</span><br><span class="line">							&lt;view class&#x3D;&quot;s_sub&quot;&gt;</span><br><span class="line">								&lt;text wx:if&#x3D;&#39;&#123;&#123;school.type1&#125;&#125;&#39; class&#x3D;&quot;grade&quot;&gt;&#123;&#123;school.type1&#125;&#125;&lt;&#x2F;text&gt;</span><br><span class="line">								&lt;text wx:if&#x3D;&#39;&#123;&#123;school.type2&#125;&#125;&#39; class&#x3D;&quot;grade&quot;&gt;&#123;&#123;school.type2&#125;&#125;&lt;&#x2F;text&gt;</span><br><span class="line">								&lt;text wx:if&#x3D;&#39;&#123;&#123;school.type2&amp;&amp;item.type1&#125;&#125;&#39; class&#x3D;&quot;grade_q&quot;&gt;双一流&lt;&#x2F;text&gt;</span><br><span class="line">							&lt;&#x2F;view&gt;</span><br><span class="line">						&lt;&#x2F;view&gt;</span><br><span class="line">					&lt;&#x2F;view&gt;</span><br><span class="line">				&lt;&#x2F;view&gt;</span><br><span class="line">			&lt;&#x2F;view&gt;</span><br><span class="line">		&lt;&#x2F;scroll-view&gt;</span><br><span class="line">		&lt;view class&#x3D;&quot;flex-right&quot;&gt;</span><br><span class="line">			&lt;view class&#x3D;&quot;zimulist&quot; bindtouchmove&#x3D;&quot;touchmovefn&quot; bindtouchstart&#x3D;&quot;touchstartfn&quot; bindtap&#x3D;&quot;toId&quot;&gt;</span><br><span class="line">				&lt;view class&#x3D;&quot;zimu&quot; wx:for&#x3D;&quot;&#123;&#123;zimu&#125;&#125;&quot; wx:key&#x3D;&quot;ABC&quot; data-id&#x3D;&quot;&#123;&#123;item&#125;&#125;&quot;&gt;&#123;&#123;item&#125;&#125;&lt;&#x2F;view&gt;</span><br><span class="line">			&lt;&#x2F;view&gt;</span><br><span class="line">		&lt;&#x2F;view&gt;</span><br><span class="line">	&lt;&#x2F;scroll-view&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br></pre></td></tr></table></figure>
<h3 id="wxss"><a href="#wxss" class="headerlink" title="wxss"></a>wxss</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.item&#123;</span><br><span class="line">  border-bottom: 1rpx solid #f2f2f2;</span><br><span class="line">  width:100%;</span><br><span class="line">  height:160rpx;</span><br><span class="line">  display: flex;</span><br><span class="line">&#125;</span><br><span class="line">.item&gt;view&#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">&#125;</span><br><span class="line">.item_img&#123;</span><br><span class="line">  width:100rpx;</span><br><span class="line">  height:100rpx;</span><br><span class="line">  border-radius: 50%;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  margin-right: 23rpx;</span><br><span class="line">  margin-top: 30rpx;</span><br><span class="line">&#125;</span><br><span class="line">.item_img&gt;image&#123;</span><br><span class="line">  width:100%;height:100%;</span><br><span class="line">&#125;</span><br><span class="line">.school&#123;</span><br><span class="line">  margin-top:30rpx;</span><br><span class="line">&#125;</span><br><span class="line">.s_name&#123;</span><br><span class="line">  line-height: 50rpx;</span><br><span class="line">  height: 50rpx;</span><br><span class="line">  font-size: 28rpx;</span><br><span class="line">  color:#333;</span><br><span class="line">&#125;</span><br><span class="line">.s_name&gt;text&#123;</span><br><span class="line">  color:#a1a6ad;</span><br><span class="line">  font-size: 24rpx;</span><br><span class="line">  margin-left: 18rpx;</span><br><span class="line">&#125;</span><br><span class="line">.s_sub&#123;</span><br><span class="line">  margin-top:10rpx;</span><br><span class="line">  font-size: 18rpx;</span><br><span class="line">&#125;</span><br><span class="line">.grade&#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  width:53rpx;</span><br><span class="line">  height:28rpx;</span><br><span class="line">  background:#f6f7fb;</span><br><span class="line">  line-height: 28rpx;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-right: 7rpx;</span><br><span class="line">  border-radius: 3rpx;</span><br><span class="line">  color:#bfc2c2;</span><br><span class="line">&#125;</span><br><span class="line">.grade_q&#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  width:73rpx;</span><br><span class="line">  height:28rpx;</span><br><span class="line">  line-height: 26rpx;</span><br><span class="line">  text-align: center;</span><br><span class="line">  border-radius: 3rpx;</span><br><span class="line">  border:1rpx solid #57d1cb;</span><br><span class="line">  color:#57d1cb;</span><br><span class="line">  font-size: 18rpx;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 所有高校 *&#x2F;</span><br><span class="line">.allSchool&#123;</span><br><span class="line">  height: 66vh;&#x2F;&#x2F;必须要有高度</span><br><span class="line">&#125;</span><br><span class="line">.zimu&#123;</span><br><span class="line">  width: 50rpx;</span><br><span class="line">  height: 20px;</span><br><span class="line">  line-height: 20px;</span><br><span class="line">&#125;</span><br><span class="line">.zimulist&#123;</span><br><span class="line">  position: fixed;</span><br><span class="line">  top: 80rpx;</span><br><span class="line">  right: 0;</span><br><span class="line">  bottom:0;</span><br><span class="line">  width: 50rpx;</span><br><span class="line">  z-index: 999999999999;</span><br><span class="line">  &#x2F;* background-color: #fff; *&#x2F;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">.alllitem&#123;</span><br><span class="line">  height: 88rpx;</span><br><span class="line">  line-height: 88rpx;</span><br><span class="line">  border-bottom: solid 1rpx #f0f1f2;</span><br><span class="line">  padding-left: 10rpx;</span><br><span class="line">  padding:0 36rpx;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.item-a&#123;</span><br><span class="line">  background-color: #f0f1f2;</span><br><span class="line">&#125;</span><br><span class="line">.aitem&#123;</span><br><span class="line">  padding:0 36rpx;</span><br><span class="line">&#125;</span><br><span class="line">.flex-wrap&#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  flex-direction: row;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">&#125;</span><br><span class="line">.flex-left&#123;</span><br><span class="line">  width: 700rpx;</span><br><span class="line">  height: 100%;</span><br><span class="line">&#125;</span><br><span class="line">.flex-right&#123;</span><br><span class="line">  width: 50rpx;</span><br><span class="line">  height: 100%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data()&#123;</span><br><span class="line">     zimu: [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;, &#39;F&#39;, &#39;G&#39;, &#39;H&#39;, &#39;I&#39;, &#39;J&#39;, &#39;K&#39;, &#39;M&#39;, &#39;N&#39;, &#39;O&#39;, &#39;P&#39;, &#39;Q&#39;, &#39;R&#39;, &#39;S&#39;, &#39;T&#39;, &#39;U&#39;, &#39;V&#39;, &#39;W&#39;, &#39;X&#39;, &#39;Y&#39;, &#39;Z&#39;],</span><br><span class="line">    scrollIntoId: &#39;A&#39;,</span><br><span class="line">    groups: [</span><br><span class="line">      &#123;</span><br><span class="line">        groupName: &#39;A&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        groupName: &#39;B&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;C&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;D&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;E&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;F&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;G&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;H&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;I&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;J&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;K&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;L&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;M&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;N&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;O&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;P&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;Q&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;R&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;S&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;T&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;U&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;V&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;W&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;X&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;Y&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        groupName: &#39;Z&#39;,</span><br><span class="line">        schoolList: [</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;1.jpg&quot;, titt: &quot;西安交通大学&quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">          &#123; img: &quot;&#x2F;imgs&#x2F;2.jpg&quot;, titt: &quot;浙江大学 &quot;, sub: &quot;部属&#x2F;公立&quot;, type1: &#39;985&#39;, type2: &#39;211&#39; &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">  touchmovefn: function (e) &#123; &#x2F;&#x2F; 右侧字母检索</span><br><span class="line">    &#x2F;&#x2F; console.log(e.changedTouches)</span><br><span class="line">    var letterIndex &#x3D; e.changedTouches[&#39;0&#39;].pageY &#x2F; 20</span><br><span class="line">    &#x2F;&#x2F; console.log(e)</span><br><span class="line">    &#x2F;&#x2F; console.log(letterIndex)</span><br><span class="line">    var index &#x3D; parseInt(letterIndex)</span><br><span class="line">    &#x2F;&#x2F; console.log(index)</span><br><span class="line">    var letter &#x3D; this.data.zimu[index]</span><br><span class="line">    &#x2F;&#x2F; console.log(letter)</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      scrollIntoId: letter</span><br><span class="line">    &#125;)</span><br><span class="line">    wx.showToast(&#123;</span><br><span class="line">      title: letter,</span><br><span class="line">      icon: &quot;none&quot;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  touchstartfn: function (e) &#123;</span><br><span class="line">    console.log(e);</span><br><span class="line">    var letter &#x3D; e.target.dataset.id</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      scrollIntoId: letter</span><br><span class="line">    &#125;)</span><br><span class="line">    wx.showToast(&#123;</span><br><span class="line">      title: letter,</span><br><span class="line">      icon: &quot;none&quot;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序自定义键盘</title>
    <url>/wxtest4/</url>
    <content><![CDATA[<blockquote>
<p>在一些特殊项目中，会有密码输入功能，有些会要求自己写一个输入键盘。下边的demo代码是纯数字的一个自定义键盘，每次调起后，数字随机排列。</p>
</blockquote>
<h3 id="wxml"><a href="#wxml" class="headerlink" title="wxml"></a>wxml</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;view class&#x3D;&quot;title&quot;&gt;</span><br><span class="line">  请输入6位查询密码</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;frame&quot;&gt;</span><br><span class="line">  &lt;view class&#x3D;&quot;flist&quot;&gt;</span><br><span class="line">    &lt;view class&#x3D;&quot;fitem&quot; wx:for&#x3D;&quot;&#123;&#123;6&#125;&#125;&quot; wx:key&#x3D;&quot;&quot; bindtap&#x3D;&quot;showkey&quot;&gt;&lt;&#x2F;view&gt;</span><br><span class="line">  &lt;&#x2F;view&gt;</span><br><span class="line">  &lt;!-- &lt;view class&#x3D;&quot;pwd&quot;&gt;&#123;&#123;pwd&#125;&#125;&lt;&#x2F;view&gt; --&gt;</span><br><span class="line">  &lt;view class&#x3D;&quot;black&quot;&gt;</span><br><span class="line">    &lt;text class&#x3D;&quot;bitem&quot; wx:for&#x3D;&quot;&#123;&#123;pwd.length&#125;&#125;&quot; wx:key&#x3D;&quot;&quot;&gt;&lt;&#x2F;text&gt;</span><br><span class="line">  &lt;&#x2F;view&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;btn&quot;&gt;确认&lt;&#x2F;view&gt;</span><br><span class="line"></span><br><span class="line">&lt;view class&#x3D;&quot;key&quot; style&#x3D;&quot;bottom:&#123;&#123;bottom&#125;&#125;rpx&quot;&gt;</span><br><span class="line">  &lt;view class&#x3D;&quot;ktitt&quot;&gt;人马银行安全键盘&lt;&#x2F;view&gt;</span><br><span class="line">  &lt;view class&#x3D;&quot;tab&quot;&gt;</span><br><span class="line">    &lt;view class&#x3D;&quot;td&quot; wx:for&#x3D;&quot;&#123;&#123;arr&#125;&#125;&quot; wx:key&#x3D;&quot;&quot; data-num&#x3D;&quot;&#123;&#123;item&#125;&#125;&quot; bindtap&#x3D;&quot;getnum&quot;&gt;&#123;&#123;item&#125;&#125;&lt;&#x2F;view&gt;</span><br><span class="line">  &lt;&#x2F;view&gt;</span><br><span class="line">  &lt;view class&#x3D;&quot;tabfoot&quot;&gt;</span><br><span class="line">    &lt;view class&#x3D;&quot;td&quot; bindtap&#x3D;&quot;hiddrenkey&quot;&gt;</span><br><span class="line">      &lt;image src&#x3D;&quot;&#x2F;images&#x2F;key.jpg&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">    &lt;&#x2F;view&gt;</span><br><span class="line">    &lt;view class&#x3D;&quot;td&quot; data-num&#x3D;&quot;0&quot; bindtap&#x3D;&quot;getnum&quot;&gt;0&lt;&#x2F;view&gt;</span><br><span class="line">    &lt;view class&#x3D;&quot;td&quot; bindtap&#x3D;&quot;dele&quot;&gt;</span><br><span class="line">      &lt;image src&#x3D;&quot;&#x2F;images&#x2F;delete.jpg&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">    &lt;&#x2F;view&gt;</span><br><span class="line">  &lt;&#x2F;view&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="wxss"><a href="#wxss" class="headerlink" title="wxss"></a>wxss</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">page &#123;</span><br><span class="line">  font-family: PingFang-SC-Regular;</span><br><span class="line">  &#x2F;* background: #f2f2f2; *&#x2F;</span><br><span class="line">  min-height:100vh;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.title &#123;</span><br><span class="line">  font-size: 30rpx;</span><br><span class="line">  color: #333;</span><br><span class="line">  text-align: center;</span><br><span class="line">  padding-top: 150rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.frame &#123;</span><br><span class="line">  width: 630rpx;</span><br><span class="line">  margin: 40rpx auto 50rpx auto;</span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.frame .pwd&#123;</span><br><span class="line">  font-size: 35rpx;</span><br><span class="line">  color:#333;</span><br><span class="line">  letter-spacing:87rpx;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top:10%;left:13%;</span><br><span class="line">&#125;</span><br><span class="line">.frame .black&#123;</span><br><span class="line">  width:100%;</span><br><span class="line">  height:50rpx;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top:45rpx;left:33rpx;</span><br><span class="line">  z-index: 200;</span><br><span class="line">&#125;</span><br><span class="line">.frame .black .bitem&#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  width:40rpx;height:40rpx;</span><br><span class="line">  border-radius: 50%;</span><br><span class="line">  background:#000;</span><br><span class="line">  margin-right: 65rpx;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* .frame .black .bitem:nth-child(4)&#123;</span><br><span class="line">  margin-right: 60rpx;  </span><br><span class="line">&#125;</span><br><span class="line">.frame .black .bitem:nth-child(5)&#123;</span><br><span class="line">  margin-right: 60rpx;  </span><br><span class="line">&#125; *&#x2F;</span><br><span class="line">.frame .black .bitem:last-child&#123;</span><br><span class="line">  margin-right: none;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.flist &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 130rpx;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.flist .fitem &#123;</span><br><span class="line">  width: 100rpx;</span><br><span class="line">  height: 130rpx;</span><br><span class="line">  background: #f2f6fe;</span><br><span class="line">  border-radius: 10rpx;</span><br><span class="line">  border: 2rpx solid #808ca5;</span><br><span class="line">  margin-right: 6rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.btn &#123;</span><br><span class="line">  width: 630rpx;</span><br><span class="line">  height: 90rpx;</span><br><span class="line">  line-height: 90rpx;</span><br><span class="line">  text-align: center;</span><br><span class="line">  font-size: 36rpx;</span><br><span class="line">  color: #fff;</span><br><span class="line">  border-radius: 10rpx;</span><br><span class="line">  margin: 40rpx auto;</span><br><span class="line">  background: #808ca5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.key &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 575rpx;</span><br><span class="line">  font-size: 30rpx;</span><br><span class="line">  position: fixed;</span><br><span class="line">  left: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.key .ktitt &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">  line-height: 115rpx;</span><br><span class="line">  color: #808ca5;</span><br><span class="line">  border-bottom: 2rpx solid #d0d3da;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.key .tab &#123;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  color: #333;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.key .td &#123;</span><br><span class="line">  font-size: 35rpx;</span><br><span class="line">  float: left;</span><br><span class="line">  width: 249rpx;</span><br><span class="line">  height: 115rpx;</span><br><span class="line">  border-top: 1rpx solid #dddee2;</span><br><span class="line">  border-right: 1rpx solid #dddee2;</span><br><span class="line">  line-height: 115rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.key .td:nth-child(3n) &#123;</span><br><span class="line">  border-right: none;</span><br><span class="line">  width:250rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.key .tabfoot &#123;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  color: #333;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">.tabfoot .td:nth-child(1),.tabfoot .td:nth-child(3)&#123;</span><br><span class="line">  background:#e7ebf4;</span><br><span class="line">  border-top: 1rpx solid #dddee2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.td image&#123;</span><br><span class="line">  width:100%;height:100%;</span><br><span class="line">&#125;</span><br><span class="line">.td:active&#123;</span><br><span class="line">  background:#e7ebf4;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="js"><a href="#js" class="headerlink" title="js"></a>js</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; Page.js 文件</span><br><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    arr:[&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;,&#39;5&#39;,&#39;6&#39;,&#39;7&#39;,&#39;8&#39;,&#39;9&#39;],</span><br><span class="line">    bottom:0,</span><br><span class="line">    pwd:&quot;&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  dele()&#123;</span><br><span class="line">    var  that &#x3D; this ;</span><br><span class="line">    var  pwd&#x3D;that.data.pwd</span><br><span class="line">    pwd &#x3D; pwd.substr(0, pwd.length - 1); </span><br><span class="line">    that.setData(&#123;</span><br><span class="line">      pwd:pwd</span><br><span class="line">    &#125;)</span><br><span class="line">    &#x2F;&#x2F; console.log(that.data.pwd)</span><br><span class="line">  &#125;,</span><br><span class="line">  getnum(e)&#123;</span><br><span class="line">    var  that&#x3D; this </span><br><span class="line">    console.log(e.currentTarget.dataset.num)</span><br><span class="line">    var pwd &#x3D; that.data.pwd, num &#x3D; e.currentTarget.dataset.num;</span><br><span class="line">    </span><br><span class="line">    if(pwd.length&#x3D;&#x3D;6)&#123;</span><br><span class="line">      &#x2F;&#x2F; console.log(that.data.pwd)</span><br><span class="line">      that.hiddrenkey()</span><br><span class="line">      return</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">      pwd +&#x3D; num</span><br><span class="line">      that.setData(&#123;</span><br><span class="line">        pwd: pwd,</span><br><span class="line">      &#125;)</span><br><span class="line">      if (pwd.length &#x3D;&#x3D; 6) &#123;</span><br><span class="line">        console.log(that.data.pwd)</span><br><span class="line">        that.hiddrenkey()</span><br><span class="line">        return</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">  &#125;,</span><br><span class="line">  randomarr()&#123;</span><br><span class="line">    var that &#x3D; this;</span><br><span class="line">      var arr&#x3D; that.data.arr</span><br><span class="line">      var clonerArr &#x3D; arr.concat();</span><br><span class="line">      clonerArr.sort(function (n1, n2) &#123;</span><br><span class="line">        return Math.random() - 0.5;</span><br><span class="line">      &#125;)</span><br><span class="line">    console.log(clonerArr)</span><br><span class="line">      return that.setData(&#123;</span><br><span class="line">        arr: clonerArr</span><br><span class="line">      &#125;)</span><br><span class="line">    </span><br><span class="line">  &#125;,</span><br><span class="line">  showkey()&#123;</span><br><span class="line">    var  that &#x3D; this;</span><br><span class="line">    that.setData(&#123;</span><br><span class="line">      bottom:0</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  hiddrenkey()&#123;</span><br><span class="line">    var that &#x3D; this ;</span><br><span class="line">    var timeout&#x3D;setInterval(()&#x3D;&gt;&#123;</span><br><span class="line">      if(that.data.bottom!&#x3D;-750)&#123;</span><br><span class="line">        var time &#x3D; that.data.bottom</span><br><span class="line">        time -&#x3D; 50</span><br><span class="line">        that.setData(&#123;</span><br><span class="line">          bottom: time</span><br><span class="line">        &#125;)</span><br><span class="line">        &#x2F;&#x2F; console.log(that.data.bottom)</span><br><span class="line">        console.log(1)</span><br><span class="line">      &#125;else&#123;</span><br><span class="line">        console.log(0)</span><br><span class="line">        clearInterval(timeout)</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;,10)</span><br><span class="line">  &#125;,</span><br><span class="line">  onLoad: function (options) &#123;</span><br><span class="line">    var  that&#x3D; this;</span><br><span class="line">    that.randomarr()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序组件 checkbox 样式修改</title>
    <url>/wxtest5/</url>
    <content><![CDATA[<blockquote>
<p>在微信小程序中 checked 组件 在使用时，如果需要改成自己想要的样式，可以参考一下代码去做修改哦！！！</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">checkbox &#123;</span><br><span class="line">  width: 50rpx;</span><br><span class="line">  height: 50rpx;</span><br><span class="line">&#125;</span><br><span class="line">/*checkbox 选项框大小  */</span><br><span class="line">checkbox .wx-checkbox-input &#123;</span><br><span class="line">  width: 32rpx;</span><br><span class="line">  height: 32rpx;</span><br><span class="line">&#125;</span><br><span class="line">/*checkbox选中后样式  */</span><br><span class="line">checkbox .wx-checkbox-input.wx-checkbox-input-checked &#123;</span><br><span class="line">  background: rgb(20, 20, 20);</span><br><span class="line">&#125;</span><br><span class="line">/*checkbox选中后图标样式  */</span><br><span class="line">checkbox .wx-checkbox-input.wx-checkbox-input-checked::before &#123;</span><br><span class="line">  width: 28rpx;</span><br><span class="line">  height: 28rpx;</span><br><span class="line">  line-height: 28rpx;</span><br><span class="line">  text-align: center;</span><br><span class="line">  font-size: 22rpx;</span><br><span class="line">  color: <span class="comment">#fff;</span></span><br><span class="line">  background: transparent;</span><br><span class="line">  transform: translate(-50%, -50%) scale(1);</span><br><span class="line">  -webkit-transform: translate(-50%, -50%) scale(1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序  商城商品倒计时</title>
    <url>/wxtest6/</url>
    <content><![CDATA[<blockquote>
<p>在微信小程序 商城项目中 商城计时折扣 是基本功能  如果是在一些团购商城的话 可能不止一件商品座倒计时处理；<br>一下demo则是处理一列商品的计时器  </p>
</blockquote>
<h4 id="day-hour-min-sec"><a href="#day-hour-min-sec" class="headerlink" title="day+hour+min+sec"></a>day+hour+min+sec</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;day+hour+min+sec</span><br><span class="line"></span><br><span class="line">  OutTime(shoplist)&#123;</span><br><span class="line">    var that &#x3D; this ;</span><br><span class="line">    var list&#x3D;shoplist;</span><br><span class="line">    clearInterval(that.data.timer)</span><br><span class="line">    var timer &#x3D; setInterval(res &#x3D;&gt; &#123;</span><br><span class="line">        if (list.is_opengroup) &#123;</span><br><span class="line">          var endTime &#x3D; list.end_time; &#x2F;&#x2F;获取数据中的时间戳 </span><br><span class="line">          var nowTime &#x3D; new Date().getTime(); &#x2F;&#x2F;现在时间（时间戳）</span><br><span class="line">          var timeOut &#x3D; parseInt(endTime) - parseInt(nowTime &#x2F; 1000)</span><br><span class="line">          var day &#x3D; 0,</span><br><span class="line">            hour &#x3D; 0,</span><br><span class="line">            minute &#x3D; 0,</span><br><span class="line">            second &#x3D; 0;</span><br><span class="line">          &#x2F;&#x2F; console.log(timeOut, nowTime, endTime, list.name)</span><br><span class="line">          if (timeOut &gt; 0) &#123; &#x2F;&#x2F;转换时间 </span><br><span class="line">            &#x2F;&#x2F;天数</span><br><span class="line">            var day &#x3D; Math.floor(timeOut &#x2F; (60 * 60 * 24));</span><br><span class="line">            &#x2F;&#x2F;取模（余数）</span><br><span class="line">            var modulo &#x3D; timeOut % (60 * 60 * 24);</span><br><span class="line">            &#x2F;&#x2F;小时数</span><br><span class="line">            var hour &#x3D; Math.floor(modulo &#x2F; (60 * 60));</span><br><span class="line">            modulo &#x3D; modulo % (60 * 60);</span><br><span class="line">            &#x2F;&#x2F;分钟</span><br><span class="line">            var minute &#x3D; Math.floor(modulo &#x2F; 60);</span><br><span class="line">            &#x2F;&#x2F;秒</span><br><span class="line">            var second &#x3D; modulo % 60;</span><br><span class="line">            if (day &lt;&#x3D; 9) day &#x3D; &#39;0&#39; + day;</span><br><span class="line">            if (hour &lt;&#x3D; 9) hour &#x3D; &#39;0&#39; + hour;</span><br><span class="line">            if (minute &lt;&#x3D; 9) minute &#x3D; &#39;0&#39; + minute;</span><br><span class="line">            if (second &lt;&#x3D; 9) second &#x3D; &#39;0&#39; + second;</span><br><span class="line">            &#x2F;&#x2F; timeOut--;</span><br><span class="line">            var time &#x3D; &#123;</span><br><span class="line">              day: day,</span><br><span class="line">              hour: hour,</span><br><span class="line">              minute: minute,</span><br><span class="line">              second: second</span><br><span class="line">            &#125;</span><br><span class="line">            &#x2F;&#x2F; console.log(time)</span><br><span class="line">            list.time &#x3D; time; &#x2F;&#x2F;在数据中添加difftime参数名，把时间放进去 </span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            var str &#x3D; &quot;已结束！&quot;;</span><br><span class="line">            &#x2F;&#x2F; clearInterval(that.data.timer);</span><br><span class="line">            list.time&#x3D;&#39;&#39;</span><br><span class="line">          &#125;</span><br><span class="line">          &#x2F;&#x2F; console.log(str); </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        that.setData(&#123;</span><br><span class="line">          shop: list</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;, 1000)</span><br><span class="line">    console.log()</span><br><span class="line">    that.setData(&#123;</span><br><span class="line">      timer: timer</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br></pre></td></tr></table></figure>

<h4 id="hour-min-sec"><a href="#hour-min-sec" class="headerlink" title="hour+min+sec"></a>hour+min+sec</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">OverTime(shoplist) &#123;</span><br><span class="line">  var that &#x3D; this;</span><br><span class="line">  var list &#x3D; shoplist</span><br><span class="line">  clearInterval(that.data.timer)</span><br><span class="line">  var timer &#x3D; setInterval(res &#x3D;&gt; &#123;</span><br><span class="line">    for (var i &#x3D; 0; i &lt; list.length; i++) &#123;</span><br><span class="line">      &#x2F;&#x2F; console.log(list[i])</span><br><span class="line">      if (list[i].is_opengroup) &#123;</span><br><span class="line">        var endTime &#x3D; list[i].end_time; &#x2F;&#x2F;获取数据中的时间戳 </span><br><span class="line">        var nowTime &#x3D; new Date().getTime(); &#x2F;&#x2F;现在时间（时间戳）</span><br><span class="line">        var timeOut &#x3D; parseInt(endTime) - parseInt(nowTime &#x2F; 1000)</span><br><span class="line">        var day &#x3D; 0,</span><br><span class="line">          hour &#x3D; 0,</span><br><span class="line">          minute &#x3D; 0,</span><br><span class="line">          second &#x3D; 0;</span><br><span class="line">        &#x2F;&#x2F; console.log(timeOut, nowTime, endTime, list[i].name)</span><br><span class="line">        if (timeOut &gt; 0) &#123; &#x2F;&#x2F;转换时间 </span><br><span class="line">          day &#x3D; Math.floor(timeOut &#x2F; (60 * 60 * 24));</span><br><span class="line">          hour &#x3D; Math.floor(timeOut &#x2F; (60 * 60));</span><br><span class="line">          minute &#x3D; Math.floor(timeOut &#x2F; 60) - (hour * 60);</span><br><span class="line">          second &#x3D; Math.floor(timeOut) - (hour * 60 * 60) - (minute * 60);</span><br><span class="line">          if (day &lt;&#x3D; 9) day &#x3D; &#39;0&#39; + day;</span><br><span class="line">          if (hour &lt;&#x3D; 9) hour &#x3D; &#39;0&#39; + hour;</span><br><span class="line">          if (minute &lt;&#x3D; 9) minute &#x3D; &#39;0&#39; + minute;</span><br><span class="line">          if (second &lt;&#x3D; 9) second &#x3D; &#39;0&#39; + second;</span><br><span class="line">          &#x2F;&#x2F; timeOut--;</span><br><span class="line">          var time &#x3D; &#123;</span><br><span class="line">            day: day,</span><br><span class="line">            hour: hour,</span><br><span class="line">            minute: minute,</span><br><span class="line">            second: second</span><br><span class="line">          &#125;</span><br><span class="line">          &#x2F;&#x2F; console.log(time)</span><br><span class="line">          var key &#x3D; &#39;time&#39;</span><br><span class="line">          list[i][key] &#x3D; time; &#x2F;&#x2F;在数据中添加difftime参数名，把时间放进去 </span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          var str &#x3D; &quot;已结束！&quot;;</span><br><span class="line">          &#x2F;&#x2F; clearInterval(that.data.timer);</span><br><span class="line">          var key1 &#x3D; &#39;timeover&#39;</span><br><span class="line">          list[i][key1] &#x3D; str;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; console.log(str); </span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      that.setData(&#123;</span><br><span class="line">        shopList: list</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, 1000)</span><br><span class="line">  console.log()</span><br><span class="line">  that.setData(&#123;</span><br><span class="line">    timer: timer</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序直播功能</title>
    <url>/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9B%B4%E6%92%AD%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<blockquote>
<p>近期公司要在微信小程序中增加直播功能,由于工期比较紧张，所以使用微信小程序自带的直播功能；</p>
</blockquote>
<p>  <img src="https://me--images.oss-cn-chengdu.aliyuncs.com/blog/zhibo.png" alt="小程序直播功能"></p>
<h6 id="查看官方文档"><a href="#查看官方文档" class="headerlink" title="查看官方文档"></a><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/liveplayer/live-player-plugin.html">查看官方文档</a></h6>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>电脑常用操作命令符</title>
    <url>/%E7%94%B5%E8%84%91%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%E7%AC%A6/</url>
    <content><![CDATA[<h4 id="本文简单记录一些电脑常用的操作命令"><a href="#本文简单记录一些电脑常用的操作命令" class="headerlink" title="本文简单记录一些电脑常用的操作命令"></a>本文简单记录一些电脑常用的操作命令</h4><h5 id="该命令行都是基于windows-R-输入cmd-出现的命令框"><a href="#该命令行都是基于windows-R-输入cmd-出现的命令框" class="headerlink" title="该命令行都是基于windows+R 输入cmd 出现的命令框"></a>该命令行都是基于windows+R 输入cmd 出现的命令框</h5> <a id="more"></a>

<h5 id="查询电脑本机IP地址"><a href="#查询电脑本机IP地址" class="headerlink" title="查询电脑本机IP地址"></a>查询电脑本机IP地址</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ipconfig/all</span><br></pre></td></tr></table></figure>
<h5 id="查询所有端口号"><a href="#查询所有端口号" class="headerlink" title="查询所有端口号"></a>查询所有端口号</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -ano</span><br></pre></td></tr></table></figure>
<h5 id="查询某个端口号"><a href="#查询某个端口号" class="headerlink" title="查询某个端口号"></a>查询某个端口号</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -ano | findstr 8080</span><br></pre></td></tr></table></figure>
<h5 id="停止某个端口号"><a href="#停止某个端口号" class="headerlink" title="停止某个端口号"></a>停止某个端口号</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">taskkill/pid 9332</span><br></pre></td></tr></table></figure>
<h5 id="强制停止端口号"><a href="#强制停止端口号" class="headerlink" title="强制停止端口号"></a>强制停止端口号</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">taskkill/pid 9332 /F</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>移动端自适应 px转rem 实现响应式屏幕</title>
    <url>/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%87%AA%E9%80%82%E5%BA%94%20px%E8%BD%ACrem%20%E5%AE%9E%E7%8E%B0%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B1%8F%E5%B9%95/</url>
    <content><![CDATA[<h6 id="在做移动端开发，h5开发时，会需求屏幕的自适应；因此就需要用到rem、em、vw、或者-；"><a href="#在做移动端开发，h5开发时，会需求屏幕的自适应；因此就需要用到rem、em、vw、或者-；" class="headerlink" title="在做移动端开发，h5开发时，会需求屏幕的自适应；因此就需要用到rem、em、vw、或者%；"></a>在做移动端开发，h5开发时，会需求屏幕的自适应；因此就需要用到rem、em、vw、或者%；</h6><h6 id="本文简述一下html文本中rem的使用方法"><a href="#本文简述一下html文本中rem的使用方法" class="headerlink" title="本文简述一下html文本中rem的使用方法"></a>本文简述一下html文本中rem的使用方法</h6><h6 id=""><a href="#" class="headerlink" title=""></a></h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    !<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">         var pageWid = 750; </span><br><span class="line">         <span class="keyword">function</span> <span class="function"><span class="title">a</span></span>() &#123; </span><br><span class="line">              document.documentElement.style.fontSize = document.documentElement.clientWidth / pageWid * 10 / 16 * 1000 + <span class="string">&quot;%&quot;</span></span><br><span class="line">             &#125;</span><br><span class="line">             var b = null; </span><br><span class="line">             window.addEventListener(<span class="string">&quot;resize&quot;</span>, <span class="function"><span class="title">function</span></span> () &#123; </span><br><span class="line">              clearTimeout(b);</span><br><span class="line">              b = setTimeout(a, 100) </span><br><span class="line">             &#125;, !1);</span><br><span class="line">         a() </span><br><span class="line">    &#125;(window);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
</search>
